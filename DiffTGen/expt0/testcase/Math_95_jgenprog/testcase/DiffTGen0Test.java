/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 31 22:38:08 GMT 2017
 */

package org.apache.commons.math.distribution;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.distribution.FDistributionImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.lang.reflect.Field;
import org.apache.commons.lang3.reflect.FieldUtils;
import static org.junit.Assert.*;
import myprinter.FieldPrinter;

public class DiffTGen0Test {

  //Test case number: 0
  /*
   * 24 covered goals:
   * Goal 1. <init>(DD)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 177
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 10. Weak Mutation 0: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - ReplaceVariable numeratorDegreesOfFreedom -> denominatorDegreesOfFreedom
   * Goal 11. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 12. Weak Mutation 2: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - ReplaceVariable denominatorDegreesOfFreedom -> numeratorDegreesOfFreedom
   * Goal 13. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 14. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 15. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 16. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 17. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 18. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 19. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 20. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 21. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 22. Weak Mutation 110: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> !=
   * Goal 23. Weak Mutation 112: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:177 - ReplaceConstant - degrees of freedom must be positive. -> 
   * Goal 24. Weak Mutation 113: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:177 - ReplaceComparisonOperator == -> !=
   */

  

  //Test case number: 1
  /*
   * 29 covered goals:
   * Goal 1. setNumeratorDegreesOfFreedom(D)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 155
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 15. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 16. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 17. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 18. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 19. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 20. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 21. Weak Mutation 101: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> >=
   * Goal 22. Weak Mutation 102: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:155 - ReplaceConstant - degrees of freedom must be positive. -> 
   * Goal 23. Weak Mutation 103: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:155 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 25. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 26. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 27. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 28. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 29. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   */

  

  //Test case number: 2
  /*
   * 40 covered goals:
   * Goal 1. inverseCumulativeProbability(D)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 100
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 103
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 106
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 15. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D
   * Goal 16. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 17. Weak Mutation 0: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - ReplaceVariable numeratorDegreesOfFreedom -> denominatorDegreesOfFreedom
   * Goal 18. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 19. Weak Mutation 2: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - ReplaceVariable denominatorDegreesOfFreedom -> numeratorDegreesOfFreedom
   * Goal 20. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 21. Weak Mutation 69: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - InsertUnaryOp Negation of p
   * Goal 22. Weak Mutation 70: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceConstant - 0.0 -> 1.0
   * Goal 23. Weak Mutation 71: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceConstant - 0.0 -> -1.0
   * Goal 24. Weak Mutation 73: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceComparisonOperator != -> <
   * Goal 25. Weak Mutation 77: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - InsertUnaryOp Negation of p
   * Goal 26. Weak Mutation 78: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> 0.0
   * Goal 27. Weak Mutation 79: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> -1.0
   * Goal 28. Weak Mutation 80: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> 2.0
   * Goal 29. Weak Mutation 82: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceComparisonOperator != -> <
   * Goal 30. Weak Mutation 88: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:106 - InsertUnaryOp Negation of p
   * Goal 31. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 32. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 33. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 34. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 35. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 36. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 37. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 38. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 39. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 40. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   */

  

  //Test case number: 3
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 72
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 73
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 82
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D
   * Goal 15. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 16. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D
   * Goal 17. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 18. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 19. Weak Mutation 4: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - InsertUnaryOp Negation of x
   * Goal 20. Weak Mutation 5: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - ReplaceConstant - 0.0 -> 1.0
   * Goal 21. Weak Mutation 6: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - ReplaceConstant - 0.0 -> -1.0
   * Goal 22. Weak Mutation 8: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - ReplaceComparisonOperator > -> !=
   * Goal 23. Weak Mutation 10: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:73 - ReplaceConstant - 0.0 -> 1.0
   * Goal 24. Weak Mutation 11: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:73 - ReplaceConstant - 0.0 -> -1.0
   * Goal 25. Weak Mutation 67: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:82 - ReplaceVariable ret -> x
   * Goal 26. Weak Mutation 68: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:82 - InsertUnaryOp Negation of ret
   * Goal 27. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 28. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 29. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 30. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 31. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 32. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 33. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 34. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 35. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 36. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   */

  

  //Test case number: 4
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V
   * Goal 14. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 15. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 16. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 17. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 18. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 19. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 20. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 21. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 22. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 23. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 24. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 25. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   */

  

  //Test case number: 5
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom()D: Line 166
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom()D
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom()D
   * Goal 15. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 16. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 17. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 18. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 19. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 20. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 21. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 22. Weak Mutation 105: org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom()D:166 - InsertUnaryOp Negation
   * Goal 23. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 24. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 25. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 26. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 27. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   */

  

  //Test case number: 6
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(D)D: Line 144
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(D)D
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(D)D
   * Goal 15. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 16. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 17. Weak Mutation 95: org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(D)D:144 - InsertUnaryOp Negation
   * Goal 18. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 19. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 20. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 21. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 22. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 23. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 24. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 25. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 26. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 27. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   */

  @Test public void test06()  throws Throwable  {
      FDistributionImpl.clearORefMap();
	FDistributionImpl fDistributionImpl0 = new FDistributionImpl(2190.64577788, 2190.64577788);
      double double0 = fDistributionImpl0.getInitialDomain(2530.0);
	List obj_list_7au3e = (List) FDistributionImpl.oref_map
			.get("getInitialDomain(double)0");
	Object target_obj_7au3e = obj_list_7au3e.get(0);
	assertEquals(
			"(E)0,(C)org.apache.commons.math.distribution.FDistributionImpl,(MSIG)getInitialDomain(double)0,(I)0",
			1.0009138070766013d, ((Double) target_obj_7au3e).doubleValue(),
			1e-12);
  }

  //Test case number: 7
  /*
   * 30 covered goals:
   * Goal 1. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D: Line 132
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D
   * Goal 15. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 16. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 17. Weak Mutation 91: org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D:132 - ReplaceConstant - 1.7976931348623157E308 -> 0.0
   * Goal 18. Weak Mutation 92: org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D:132 - ReplaceConstant - 1.7976931348623157E308 -> 1.0
   * Goal 19. Weak Mutation 93: org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D:132 - ReplaceConstant - 1.7976931348623157E308 -> -1.0
   * Goal 20. Weak Mutation 94: org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D:132 - ReplaceConstant - 1.7976931348623157E308 -> 1.7976931348623157E308
   * Goal 21. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 22. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 23. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 24. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 25. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 26. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 27. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 28. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 29. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 30. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   */

  

  //Test case number: 8
  /*
   * 28 covered goals:
   * Goal 1. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound(D)D: Line 119
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound(D)D
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound(D)D
   * Goal 15. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 16. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 17. Weak Mutation 89: org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound(D)D:119 - ReplaceConstant - 0.0 -> 1.0
   * Goal 18. Weak Mutation 90: org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound(D)D:119 - ReplaceConstant - 0.0 -> -1.0
   * Goal 19. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 20. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 21. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 22. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 23. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 24. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 25. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 26. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 27. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 28. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   */

  

  //Test case number: 9
  /*
   * 27 covered goals:
   * Goal 1. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom()D: Line 188
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom()D
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom()D
   * Goal 15. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 16. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 17. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 18. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 19. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 20. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 21. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 22. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 23. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 24. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 25. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 26. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 27. Weak Mutation 115: org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom()D:188 - InsertUnaryOp Negation
   */

  

  //Test case number: 10
  /*
   * 81 covered goals:
   * Goal 1. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 72
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 75
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 76
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 78
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 82
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom()D: Line 188
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom()D: Line 166
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 15. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 16. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 17. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 18. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D
   * Goal 19. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 20. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D
   * Goal 21. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 22. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 23. Weak Mutation 4: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - InsertUnaryOp Negation of x
   * Goal 24. Weak Mutation 5: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - ReplaceConstant - 0.0 -> 1.0
   * Goal 25. Weak Mutation 6: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - ReplaceConstant - 0.0 -> -1.0
   * Goal 26. Weak Mutation 7: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - ReplaceComparisonOperator > -> -2
   * Goal 27. Weak Mutation 14: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of n
   * Goal 28. Weak Mutation 17: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of x
   * Goal 29. Weak Mutation 18: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> +
   * Goal 30. Weak Mutation 19: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> %
   * Goal 31. Weak Mutation 20: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> -
   * Goal 32. Weak Mutation 21: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> /
   * Goal 33. Weak Mutation 24: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of m
   * Goal 34. Weak Mutation 27: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of n
   * Goal 35. Weak Mutation 30: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of x
   * Goal 36. Weak Mutation 31: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> +
   * Goal 37. Weak Mutation 32: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> %
   * Goal 38. Weak Mutation 33: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> -
   * Goal 39. Weak Mutation 34: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> /
   * Goal 40. Weak Mutation 35: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator + -> %
   * Goal 41. Weak Mutation 36: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator + -> -
   * Goal 42. Weak Mutation 37: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator + -> *
   * Goal 43. Weak Mutation 38: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator + -> /
   * Goal 44. Weak Mutation 39: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator / -> +
   * Goal 45. Weak Mutation 40: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator / -> %
   * Goal 46. Weak Mutation 41: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator / -> -
   * Goal 47. Weak Mutation 42: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator / -> *
   * Goal 48. Weak Mutation 43: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 0.0
   * Goal 49. Weak Mutation 44: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 1.0
   * Goal 50. Weak Mutation 45: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> -1.0
   * Goal 51. Weak Mutation 46: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> -0.5
   * Goal 52. Weak Mutation 47: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 1.5
   * Goal 53. Weak Mutation 50: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of n
   * Goal 54. Weak Mutation 51: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> +
   * Goal 55. Weak Mutation 52: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> %
   * Goal 56. Weak Mutation 53: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> -
   * Goal 57. Weak Mutation 54: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> /
   * Goal 58. Weak Mutation 55: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 0.0
   * Goal 59. Weak Mutation 56: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 1.0
   * Goal 60. Weak Mutation 57: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> -1.0
   * Goal 61. Weak Mutation 58: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> -0.5
   * Goal 62. Weak Mutation 59: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 1.5
   * Goal 63. Weak Mutation 62: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of m
   * Goal 64. Weak Mutation 63: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> +
   * Goal 65. Weak Mutation 64: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> %
   * Goal 66. Weak Mutation 65: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> -
   * Goal 67. Weak Mutation 66: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> /
   * Goal 68. Weak Mutation 67: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:82 - ReplaceVariable ret -> x
   * Goal 69. Weak Mutation 68: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:82 - InsertUnaryOp Negation of ret
   * Goal 70. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 71. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 72. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 73. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 74. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 75. Weak Mutation 105: org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom()D:166 - InsertUnaryOp Negation
   * Goal 76. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 77. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 78. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 79. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 80. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 81. Weak Mutation 115: org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom()D:188 - InsertUnaryOp Negation
   */

  

  //Test case number: 11
  /*
   * 41 covered goals:
   * Goal 1. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 100
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 103
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 104
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D
   * Goal 15. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 16. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D
   * Goal 17. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 18. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 19. Weak Mutation 69: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - InsertUnaryOp Negation of p
   * Goal 20. Weak Mutation 70: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceConstant - 0.0 -> 1.0
   * Goal 21. Weak Mutation 71: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceConstant - 0.0 -> -1.0
   * Goal 22. Weak Mutation 73: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceComparisonOperator != -> <
   * Goal 23. Weak Mutation 77: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - InsertUnaryOp Negation of p
   * Goal 24. Weak Mutation 78: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> 0.0
   * Goal 25. Weak Mutation 79: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> -1.0
   * Goal 26. Weak Mutation 80: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> 2.0
   * Goal 27. Weak Mutation 81: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceComparisonOperator != -> -1
   * Goal 28. Weak Mutation 84: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:104 - ReplaceConstant - Infinity -> 0.0
   * Goal 29. Weak Mutation 85: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:104 - ReplaceConstant - Infinity -> 1.0
   * Goal 30. Weak Mutation 86: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:104 - ReplaceConstant - Infinity -> -1.0
   * Goal 31. Weak Mutation 87: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:104 - ReplaceConstant - Infinity -> Infinity
   * Goal 32. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 33. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 34. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 35. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 36. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 37. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 38. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 39. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 40. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 41. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   */

  

  //Test case number: 12
  /*
   * 33 covered goals:
   * Goal 1. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 100
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 101
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 15. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D
   * Goal 16. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 17. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 18. Weak Mutation 69: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - InsertUnaryOp Negation of p
   * Goal 19. Weak Mutation 70: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceConstant - 0.0 -> 1.0
   * Goal 20. Weak Mutation 71: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceConstant - 0.0 -> -1.0
   * Goal 21. Weak Mutation 72: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceComparisonOperator != -> -1
   * Goal 22. Weak Mutation 75: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:101 - ReplaceConstant - 0.0 -> 1.0
   * Goal 23. Weak Mutation 76: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:101 - ReplaceConstant - 0.0 -> -1.0
   * Goal 24. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 25. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 26. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 27. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 28. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 29. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 30. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 31. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 32. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 33. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   */

  

  //Test case number: 13
  /*
   * 29 covered goals:
   * Goal 1. setNumeratorDegreesOfFreedom(D)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 155
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 15. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 16. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 17. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 18. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 19. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 20. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 21. Weak Mutation 100: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> !=
   * Goal 22. Weak Mutation 102: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:155 - ReplaceConstant - degrees of freedom must be positive. -> 
   * Goal 23. Weak Mutation 103: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:155 - ReplaceComparisonOperator == -> !=
   * Goal 24. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 25. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 26. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 27. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 28. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 29. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   */

  

  //Test case number: 14
  /*
   * 31 covered goals:
   * Goal 1. setDenominatorDegreesOfFreedom(D)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 177
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 15. Weak Mutation 0: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - ReplaceVariable numeratorDegreesOfFreedom -> denominatorDegreesOfFreedom
   * Goal 16. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 17. Weak Mutation 2: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - ReplaceVariable denominatorDegreesOfFreedom -> numeratorDegreesOfFreedom
   * Goal 18. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 19. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 20. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 21. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 22. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 23. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 24. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 25. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 26. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 27. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 28. Weak Mutation 111: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> >=
   * Goal 29. Weak Mutation 112: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:177 - ReplaceConstant - degrees of freedom must be positive. -> 
   * Goal 30. Weak Mutation 113: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:177 - ReplaceComparisonOperator == -> !=
   * Goal 31. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   */

  

  //Test case number: 15
  /*
   * 124 covered goals:
   * Goal 1. inverseCumulativeProbability(D)D_org.evosuite.runtime.mock.java.lang.MockException_DECLARED
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 72
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 73
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 75
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 76
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 78
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 82
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom()D: Line 188
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound(D)D: Line 119
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D: Line 132
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(D)D: Line 144
   * Goal 15. org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom()D: Line 166
   * Goal 16. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 100
   * Goal 17. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 103
   * Goal 18. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 106
   * Goal 19. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 20. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 21. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 22. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 23. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 24. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 25. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 26. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D
   * Goal 27. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V
   * Goal 28. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 29. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V
   * Goal 30. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 31. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 32. Weak Mutation 4: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - InsertUnaryOp Negation of x
   * Goal 33. Weak Mutation 5: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - ReplaceConstant - 0.0 -> 1.0
   * Goal 34. Weak Mutation 6: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - ReplaceConstant - 0.0 -> -1.0
   * Goal 35. Weak Mutation 7: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - ReplaceComparisonOperator > -> -2
   * Goal 36. Weak Mutation 9: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - ReplaceComparisonOperator > -> >=
   * Goal 37. Weak Mutation 10: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:73 - ReplaceConstant - 0.0 -> 1.0
   * Goal 38. Weak Mutation 11: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:73 - ReplaceConstant - 0.0 -> -1.0
   * Goal 39. Weak Mutation 12: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable n -> x
   * Goal 40. Weak Mutation 13: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable n -> m
   * Goal 41. Weak Mutation 14: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of n
   * Goal 42. Weak Mutation 15: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable x -> m
   * Goal 43. Weak Mutation 16: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable x -> n
   * Goal 44. Weak Mutation 17: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of x
   * Goal 45. Weak Mutation 18: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> +
   * Goal 46. Weak Mutation 19: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> %
   * Goal 47. Weak Mutation 20: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> -
   * Goal 48. Weak Mutation 21: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> /
   * Goal 49. Weak Mutation 22: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable m -> x
   * Goal 50. Weak Mutation 23: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable m -> n
   * Goal 51. Weak Mutation 24: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of m
   * Goal 52. Weak Mutation 25: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable n -> x
   * Goal 53. Weak Mutation 26: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable n -> m
   * Goal 54. Weak Mutation 27: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of n
   * Goal 55. Weak Mutation 28: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable x -> m
   * Goal 56. Weak Mutation 29: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable x -> n
   * Goal 57. Weak Mutation 30: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of x
   * Goal 58. Weak Mutation 31: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> +
   * Goal 59. Weak Mutation 32: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> %
   * Goal 60. Weak Mutation 33: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> -
   * Goal 61. Weak Mutation 34: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> /
   * Goal 62. Weak Mutation 35: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator + -> %
   * Goal 63. Weak Mutation 36: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator + -> -
   * Goal 64. Weak Mutation 37: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator + -> *
   * Goal 65. Weak Mutation 38: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator + -> /
   * Goal 66. Weak Mutation 39: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator / -> +
   * Goal 67. Weak Mutation 40: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator / -> %
   * Goal 68. Weak Mutation 41: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator / -> -
   * Goal 69. Weak Mutation 42: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator / -> *
   * Goal 70. Weak Mutation 43: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 0.0
   * Goal 71. Weak Mutation 44: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 1.0
   * Goal 72. Weak Mutation 45: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> -1.0
   * Goal 73. Weak Mutation 46: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> -0.5
   * Goal 74. Weak Mutation 47: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 1.5
   * Goal 75. Weak Mutation 48: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable n -> x
   * Goal 76. Weak Mutation 49: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable n -> m
   * Goal 77. Weak Mutation 50: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of n
   * Goal 78. Weak Mutation 51: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> +
   * Goal 79. Weak Mutation 52: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> %
   * Goal 80. Weak Mutation 53: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> -
   * Goal 81. Weak Mutation 54: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> /
   * Goal 82. Weak Mutation 55: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 0.0
   * Goal 83. Weak Mutation 56: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 1.0
   * Goal 84. Weak Mutation 57: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> -1.0
   * Goal 85. Weak Mutation 58: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> -0.5
   * Goal 86. Weak Mutation 59: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 1.5
   * Goal 87. Weak Mutation 60: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable m -> x
   * Goal 88. Weak Mutation 61: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable m -> n
   * Goal 89. Weak Mutation 62: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of m
   * Goal 90. Weak Mutation 63: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> +
   * Goal 91. Weak Mutation 64: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> %
   * Goal 92. Weak Mutation 65: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> -
   * Goal 93. Weak Mutation 66: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> /
   * Goal 94. Weak Mutation 67: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:82 - ReplaceVariable ret -> x
   * Goal 95. Weak Mutation 68: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:82 - InsertUnaryOp Negation of ret
   * Goal 96. Weak Mutation 69: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - InsertUnaryOp Negation of p
   * Goal 97. Weak Mutation 70: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceConstant - 0.0 -> 1.0
   * Goal 98. Weak Mutation 71: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceConstant - 0.0 -> -1.0
   * Goal 99. Weak Mutation 73: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceComparisonOperator != -> <
   * Goal 100. Weak Mutation 77: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - InsertUnaryOp Negation of p
   * Goal 101. Weak Mutation 78: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> 0.0
   * Goal 102. Weak Mutation 79: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> -1.0
   * Goal 103. Weak Mutation 80: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> 2.0
   * Goal 104. Weak Mutation 83: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceComparisonOperator != -> >
   * Goal 105. Weak Mutation 88: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:106 - InsertUnaryOp Negation of p
   * Goal 106. Weak Mutation 89: org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound(D)D:119 - ReplaceConstant - 0.0 -> 1.0
   * Goal 107. Weak Mutation 90: org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound(D)D:119 - ReplaceConstant - 0.0 -> -1.0
   * Goal 108. Weak Mutation 91: org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D:132 - ReplaceConstant - 1.7976931348623157E308 -> 0.0
   * Goal 109. Weak Mutation 92: org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D:132 - ReplaceConstant - 1.7976931348623157E308 -> 1.0
   * Goal 110. Weak Mutation 93: org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D:132 - ReplaceConstant - 1.7976931348623157E308 -> -1.0
   * Goal 111. Weak Mutation 94: org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D:132 - ReplaceConstant - 1.7976931348623157E308 -> 1.7976931348623157E308
   * Goal 112. Weak Mutation 95: org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(D)D:144 - InsertUnaryOp Negation
   * Goal 113. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 114. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 115. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 116. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 117. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 118. Weak Mutation 105: org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom()D:166 - InsertUnaryOp Negation
   * Goal 119. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 120. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 121. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 122. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 123. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 124. Weak Mutation 115: org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom()D:188 - InsertUnaryOp Negation
   */

  //Test case number: 16
  /*
   * 120 covered goals:
   * Goal 1. inverseCumulativeProbability(D)D_org.evosuite.runtime.TooManyResourcesException_IMPLICIT
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 72
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 75
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 76
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 78
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D: Line 82
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom()D: Line 188
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound(D)D: Line 119
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D: Line 132
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(D)D: Line 144
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom()D: Line 166
   * Goal 15. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 100
   * Goal 16. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 103
   * Goal 17. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 106
   * Goal 18. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 19. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 20. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 21. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 22. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 23. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 24. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 25. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D
   * Goal 26. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 27. Weak Mutation 0: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - ReplaceVariable numeratorDegreesOfFreedom -> denominatorDegreesOfFreedom
   * Goal 28. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 29. Weak Mutation 2: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - ReplaceVariable denominatorDegreesOfFreedom -> numeratorDegreesOfFreedom
   * Goal 30. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 31. Weak Mutation 4: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - InsertUnaryOp Negation of x
   * Goal 32. Weak Mutation 5: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - ReplaceConstant - 0.0 -> 1.0
   * Goal 33. Weak Mutation 6: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - ReplaceConstant - 0.0 -> -1.0
   * Goal 34. Weak Mutation 7: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:72 - ReplaceComparisonOperator > -> -2
   * Goal 35. Weak Mutation 12: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable n -> x
   * Goal 36. Weak Mutation 13: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable n -> m
   * Goal 37. Weak Mutation 14: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of n
   * Goal 38. Weak Mutation 15: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable x -> m
   * Goal 39. Weak Mutation 16: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable x -> n
   * Goal 40. Weak Mutation 17: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of x
   * Goal 41. Weak Mutation 18: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> +
   * Goal 42. Weak Mutation 19: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> %
   * Goal 43. Weak Mutation 20: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> -
   * Goal 44. Weak Mutation 21: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> /
   * Goal 45. Weak Mutation 22: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable m -> x
   * Goal 46. Weak Mutation 23: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable m -> n
   * Goal 47. Weak Mutation 24: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of m
   * Goal 48. Weak Mutation 25: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable n -> x
   * Goal 49. Weak Mutation 26: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable n -> m
   * Goal 50. Weak Mutation 27: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of n
   * Goal 51. Weak Mutation 28: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable x -> m
   * Goal 52. Weak Mutation 29: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable x -> n
   * Goal 53. Weak Mutation 30: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of x
   * Goal 54. Weak Mutation 31: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> +
   * Goal 55. Weak Mutation 32: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> %
   * Goal 56. Weak Mutation 33: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> -
   * Goal 57. Weak Mutation 34: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> /
   * Goal 58. Weak Mutation 35: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator + -> %
   * Goal 59. Weak Mutation 36: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator + -> -
   * Goal 60. Weak Mutation 37: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator + -> *
   * Goal 61. Weak Mutation 38: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator + -> /
   * Goal 62. Weak Mutation 39: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator / -> +
   * Goal 63. Weak Mutation 40: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator / -> %
   * Goal 64. Weak Mutation 41: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator / -> -
   * Goal 65. Weak Mutation 42: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator / -> *
   * Goal 66. Weak Mutation 43: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 0.0
   * Goal 67. Weak Mutation 44: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 1.0
   * Goal 68. Weak Mutation 45: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> -1.0
   * Goal 69. Weak Mutation 46: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> -0.5
   * Goal 70. Weak Mutation 47: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 1.5
   * Goal 71. Weak Mutation 48: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable n -> x
   * Goal 72. Weak Mutation 49: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable n -> m
   * Goal 73. Weak Mutation 50: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of n
   * Goal 74. Weak Mutation 51: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> +
   * Goal 75. Weak Mutation 52: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> %
   * Goal 76. Weak Mutation 53: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> -
   * Goal 77. Weak Mutation 54: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> /
   * Goal 78. Weak Mutation 55: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 0.0
   * Goal 79. Weak Mutation 56: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 1.0
   * Goal 80. Weak Mutation 57: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> -1.0
   * Goal 81. Weak Mutation 58: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> -0.5
   * Goal 82. Weak Mutation 59: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceConstant - 0.5 -> 1.5
   * Goal 83. Weak Mutation 60: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable m -> x
   * Goal 84. Weak Mutation 61: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceVariable m -> n
   * Goal 85. Weak Mutation 62: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - InsertUnaryOp Negation of m
   * Goal 86. Weak Mutation 63: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> +
   * Goal 87. Weak Mutation 64: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> %
   * Goal 88. Weak Mutation 65: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> -
   * Goal 89. Weak Mutation 66: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:78 - ReplaceArithmeticOperator * -> /
   * Goal 90. Weak Mutation 67: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:82 - ReplaceVariable ret -> x
   * Goal 91. Weak Mutation 68: org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(D)D:82 - InsertUnaryOp Negation of ret
   * Goal 92. Weak Mutation 69: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - InsertUnaryOp Negation of p
   * Goal 93. Weak Mutation 70: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceConstant - 0.0 -> 1.0
   * Goal 94. Weak Mutation 71: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceConstant - 0.0 -> -1.0
   * Goal 95. Weak Mutation 73: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceComparisonOperator != -> <
   * Goal 96. Weak Mutation 77: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - InsertUnaryOp Negation of p
   * Goal 97. Weak Mutation 78: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> 0.0
   * Goal 98. Weak Mutation 79: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> -1.0
   * Goal 99. Weak Mutation 80: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> 2.0
   * Goal 100. Weak Mutation 83: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceComparisonOperator != -> >
   * Goal 101. Weak Mutation 88: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:106 - InsertUnaryOp Negation of p
   * Goal 102. Weak Mutation 89: org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound(D)D:119 - ReplaceConstant - 0.0 -> 1.0
   * Goal 103. Weak Mutation 90: org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound(D)D:119 - ReplaceConstant - 0.0 -> -1.0
   * Goal 104. Weak Mutation 91: org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D:132 - ReplaceConstant - 1.7976931348623157E308 -> 0.0
   * Goal 105. Weak Mutation 92: org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D:132 - ReplaceConstant - 1.7976931348623157E308 -> 1.0
   * Goal 106. Weak Mutation 93: org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D:132 - ReplaceConstant - 1.7976931348623157E308 -> -1.0
   * Goal 107. Weak Mutation 94: org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(D)D:132 - ReplaceConstant - 1.7976931348623157E308 -> 1.7976931348623157E308
   * Goal 108. Weak Mutation 95: org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(D)D:144 - InsertUnaryOp Negation
   * Goal 109. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 110. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 111. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 112. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 113. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 114. Weak Mutation 105: org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom()D:166 - InsertUnaryOp Negation
   * Goal 115. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 116. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 117. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 118. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 119. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 120. Weak Mutation 115: org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom()D:188 - InsertUnaryOp Negation
   */

  //Test case number: 17
  /*
   * 38 covered goals:
   * Goal 1. inverseCumulativeProbability(D)D_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 2. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 51
   * Goal 3. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 52
   * Goal 4. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V: Line 53
   * Goal 5. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 100
   * Goal 6. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 103
   * Goal 7. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D: Line 106
   * Goal 8. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 176
   * Goal 9. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 180
   * Goal 10. org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V: Line 181
   * Goal 11. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 154
   * Goal 12. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 158
   * Goal 13. org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V: Line 159
   * Goal 14. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 15. org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D
   * Goal 16. org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V
   * Goal 17. Weak Mutation 1: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:51 - InsertUnaryOp Negation of numeratorDegreesOfFreedom
   * Goal 18. Weak Mutation 3: org.apache.commons.math.distribution.FDistributionImpl.<init>(DD)V:52 - InsertUnaryOp Negation of denominatorDegreesOfFreedom
   * Goal 19. Weak Mutation 69: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - InsertUnaryOp Negation of p
   * Goal 20. Weak Mutation 70: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceConstant - 0.0 -> 1.0
   * Goal 21. Weak Mutation 71: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceConstant - 0.0 -> -1.0
   * Goal 22. Weak Mutation 74: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:100 - ReplaceComparisonOperator != -> >
   * Goal 23. Weak Mutation 77: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - InsertUnaryOp Negation of p
   * Goal 24. Weak Mutation 78: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> 0.0
   * Goal 25. Weak Mutation 79: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> -1.0
   * Goal 26. Weak Mutation 80: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceConstant - 1.0 -> 2.0
   * Goal 27. Weak Mutation 83: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:103 - ReplaceComparisonOperator != -> >
   * Goal 28. Weak Mutation 88: org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(D)D:106 - InsertUnaryOp Negation of p
   * Goal 29. Weak Mutation 96: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 30. Weak Mutation 97: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> 1.0
   * Goal 31. Weak Mutation 98: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceConstant - 0.0 -> -1.0
   * Goal 32. Weak Mutation 99: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:154 - ReplaceComparisonOperator > -> -2
   * Goal 33. Weak Mutation 104: org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(D)V:158 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 34. Weak Mutation 106: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - InsertUnaryOp Negation of degreesOfFreedom
   * Goal 35. Weak Mutation 107: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> 1.0
   * Goal 36. Weak Mutation 108: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceConstant - 0.0 -> -1.0
   * Goal 37. Weak Mutation 109: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:176 - ReplaceComparisonOperator > -> -2
   * Goal 38. Weak Mutation 114: org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(D)V:180 - InsertUnaryOp Negation of degreesOfFreedom
   */
}
