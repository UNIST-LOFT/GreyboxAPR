/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 31 22:20:07 GMT 2017
 */

package org.apache.commons.math.stat.clustering;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import org.apache.commons.math.stat.clustering.EuclideanIntegerPoint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.lang.reflect.Field;
import org.apache.commons.lang3.reflect.FieldUtils;
import static org.junit.Assert.*;
import myprinter.FieldPrinter;

public class DiffTGen0Test {

  //Test case number: 0
  /*
   * 42 covered goals:
   * Goal 1. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I: Line 100
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I: Line 101
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I: Line 102
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I: Line 104
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 10. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I
   * Goal 11. Weak Mutation 69: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:100 - ReplaceConstant - 0 -> 1
   * Goal 12. Weak Mutation 70: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:101 - ReplaceConstant - 0 -> 1
   * Goal 13. Weak Mutation 71: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:101 - ReplaceComparisonOperator >= -> -1
   * Goal 14. Weak Mutation 72: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:101 - ReplaceComparisonOperator >= -> >
   * Goal 15. Weak Mutation 74: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - InsertUnaryOp Negation of hashCode
   * Goal 16. Weak Mutation 75: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - InsertUnaryOp IINC 1 hashCode
   * Goal 17. Weak Mutation 76: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - InsertUnaryOp IINC -1 hashCode
   * Goal 18. Weak Mutation 77: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceConstant - 13 -> 0
   * Goal 19. Weak Mutation 78: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceConstant - 13 -> 1
   * Goal 20. Weak Mutation 79: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceConstant - 13 -> -1
   * Goal 21. Weak Mutation 80: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceConstant - 13 -> 12
   * Goal 22. Weak Mutation 81: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceConstant - 13 -> 14
   * Goal 23. Weak Mutation 82: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceArithmeticOperator * -> +
   * Goal 24. Weak Mutation 83: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceArithmeticOperator * -> %
   * Goal 25. Weak Mutation 84: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceArithmeticOperator * -> -
   * Goal 26. Weak Mutation 85: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceArithmeticOperator * -> /
   * Goal 27. Weak Mutation 86: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceConstant - 7 -> 0
   * Goal 28. Weak Mutation 87: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceConstant - 7 -> 1
   * Goal 29. Weak Mutation 88: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceConstant - 7 -> -1
   * Goal 30. Weak Mutation 89: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceConstant - 7 -> 6
   * Goal 31. Weak Mutation 90: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceConstant - 7 -> 8
   * Goal 32. Weak Mutation 91: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceArithmeticOperator + -> %
   * Goal 33. Weak Mutation 92: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceArithmeticOperator + -> -
   * Goal 34. Weak Mutation 93: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceArithmeticOperator + -> *
   * Goal 35. Weak Mutation 94: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceArithmeticOperator + -> /
   * Goal 36. Weak Mutation 95: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceArithmeticOperator + -> %
   * Goal 37. Weak Mutation 96: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceArithmeticOperator + -> -
   * Goal 38. Weak Mutation 97: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceArithmeticOperator + -> *
   * Goal 39. Weak Mutation 98: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:102 - ReplaceArithmeticOperator + -> /
   * Goal 40. Weak Mutation 99: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:104 - InsertUnaryOp Negation of hashCode
   * Goal 41. Weak Mutation 100: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:104 - InsertUnaryOp IINC 1 hashCode
   * Goal 42. Weak Mutation 101: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:104 - InsertUnaryOp IINC -1 hashCode
   */

  

  //Test case number: 1
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 77
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 80
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 81
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 82
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
   * Goal 10. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 11. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
   * Goal 12. Weak Mutation 34: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:77 - ReplaceComparisonOperator != -> ==
   * Goal 13. Weak Mutation 38: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:81 - ReplaceComparisonOperator == -> <=
   * Goal 14. Weak Mutation 39: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:82 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 2
  /*
   * 44 covered goals:
   * Goal 1. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 62
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 63
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 64
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 65
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 67
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 68
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 69
   * Goal 10. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 71
   * Goal 11. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 12. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 13. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;
   * Goal 14. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 15. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;
   * Goal 16. Weak Mutation 1: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:63 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 2: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:64 - ReplaceConstant - 0 -> 1
   * Goal 18. Weak Mutation 3: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:64 - InsertUnaryOp Negation of i
   * Goal 19. Weak Mutation 4: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:64 - InsertUnaryOp IINC 1 i
   * Goal 20. Weak Mutation 5: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:64 - InsertUnaryOp IINC -1 i
   * Goal 21. Weak Mutation 6: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:64 - ReplaceComparisonOperator >= -> -1
   * Goal 22. Weak Mutation 7: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:64 - ReplaceComparisonOperator >= -> >
   * Goal 23. Weak Mutation 9: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - InsertUnaryOp Negation of i
   * Goal 24. Weak Mutation 10: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - InsertUnaryOp IINC 1 i
   * Goal 25. Weak Mutation 11: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - InsertUnaryOp IINC -1 i
   * Goal 26. Weak Mutation 13: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - InsertUnaryOp Negation of i
   * Goal 27. Weak Mutation 14: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - InsertUnaryOp IINC 1 i
   * Goal 28. Weak Mutation 15: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - InsertUnaryOp IINC -1 i
   * Goal 29. Weak Mutation 16: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - ReplaceArithmeticOperator + -> %
   * Goal 30. Weak Mutation 17: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - ReplaceArithmeticOperator + -> -
   * Goal 31. Weak Mutation 18: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - ReplaceArithmeticOperator + -> *
   * Goal 32. Weak Mutation 19: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - ReplaceArithmeticOperator + -> /
   * Goal 33. Weak Mutation 20: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:68 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 21: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:68 - InsertUnaryOp Negation of i
   * Goal 35. Weak Mutation 22: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:68 - InsertUnaryOp IINC 1 i
   * Goal 36. Weak Mutation 23: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:68 - InsertUnaryOp IINC -1 i
   * Goal 37. Weak Mutation 24: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:68 - ReplaceComparisonOperator >= -> -1
   * Goal 38. Weak Mutation 25: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:68 - ReplaceComparisonOperator >= -> >
   * Goal 39. Weak Mutation 27: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:69 - InsertUnaryOp Negation of i
   * Goal 40. Weak Mutation 28: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:69 - InsertUnaryOp IINC 1 i
   * Goal 41. Weak Mutation 29: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:69 - InsertUnaryOp IINC -1 i
   * Goal 42. Weak Mutation 30: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:69 - ReplaceArithmeticOperator / -> +
   * Goal 43. Weak Mutation 31: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:69 - ReplaceArithmeticOperator / -> %
   * Goal 44. Weak Mutation 32: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:69 - ReplaceArithmeticOperator / -> -
   */

  

  //Test case number: 3
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;)D: Line 57
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;)D
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;)D
   */

  

  //Test case number: 4
  /*
   * 37 covered goals:
   * Goal 1. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;: Line 113
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;: Line 114
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;: Line 115
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;: Line 116
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;: Line 117
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;: Line 118
   * Goal 10. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;: Line 121
   * Goal 11. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;: Line 122
   * Goal 12. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 13. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;
   * Goal 14. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 15. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;
   * Goal 16. Weak Mutation 102: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:113 - ReplaceConstant - ( -> 
   * Goal 17. Weak Mutation 103: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:115 - ReplaceConstant - 0 -> 1
   * Goal 18. Weak Mutation 104: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:115 - InsertUnaryOp Negation of i
   * Goal 19. Weak Mutation 105: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:115 - InsertUnaryOp IINC 1 i
   * Goal 20. Weak Mutation 106: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:115 - InsertUnaryOp IINC -1 i
   * Goal 21. Weak Mutation 107: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:115 - ReplaceComparisonOperator >= -> -1
   * Goal 22. Weak Mutation 108: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:115 - ReplaceComparisonOperator >= -> >
   * Goal 23. Weak Mutation 110: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:116 - InsertUnaryOp Negation of i
   * Goal 24. Weak Mutation 111: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:116 - InsertUnaryOp IINC 1 i
   * Goal 25. Weak Mutation 112: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:116 - InsertUnaryOp IINC -1 i
   * Goal 26. Weak Mutation 113: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:117 - InsertUnaryOp Negation of i
   * Goal 27. Weak Mutation 114: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:117 - InsertUnaryOp IINC 1 i
   * Goal 28. Weak Mutation 115: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:117 - InsertUnaryOp IINC -1 i
   * Goal 29. Weak Mutation 116: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:117 - ReplaceConstant - 1 -> 0
   * Goal 30. Weak Mutation 117: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:117 - ReplaceArithmeticOperator - -> +
   * Goal 31. Weak Mutation 118: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:117 - ReplaceArithmeticOperator - -> %
   * Goal 32. Weak Mutation 119: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:117 - ReplaceArithmeticOperator - -> *
   * Goal 33. Weak Mutation 120: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:117 - ReplaceArithmeticOperator - -> /
   * Goal 34. Weak Mutation 121: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:117 - ReplaceComparisonOperator >= -> -1
   * Goal 35. Weak Mutation 122: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:117 - ReplaceComparisonOperator >= -> >
   * Goal 36. Weak Mutation 124: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:118 - ReplaceConstant - , -> 
   * Goal 37. Weak Mutation 125: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:121 - ReplaceConstant - ) -> 
   */

  

  //Test case number: 5
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 77
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 80
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 81
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 84
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 85
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 86
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 89
   * Goal 10. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 90
   * Goal 11. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 12. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 13. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
   * Goal 14. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 15. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
   * Goal 16. Weak Mutation 34: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:77 - ReplaceComparisonOperator != -> ==
   * Goal 17. Weak Mutation 36: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:81 - ReplaceComparisonOperator == -> -2
   * Goal 18. Weak Mutation 40: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 41: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - InsertUnaryOp Negation of i
   * Goal 20. Weak Mutation 42: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - InsertUnaryOp IINC 1 i
   * Goal 21. Weak Mutation 43: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - InsertUnaryOp IINC -1 i
   * Goal 22. Weak Mutation 44: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - ReplaceComparisonOperator >= -> -1
   * Goal 23. Weak Mutation 47: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp Negation of i
   * Goal 24. Weak Mutation 48: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp IINC 1 i
   * Goal 25. Weak Mutation 49: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp IINC -1 i
   * Goal 26. Weak Mutation 50: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp Negation of i
   * Goal 27. Weak Mutation 51: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp IINC 1 i
   * Goal 28. Weak Mutation 52: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp IINC -1 i
   * Goal 29. Weak Mutation 55: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - ReplaceComparisonOperator == -> <=
   * Goal 30. Weak Mutation 56: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:86 - ReplaceConstant - 1 -> 0
   * Goal 31. Weak Mutation 59: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:86 - ReplaceComparisonOperator != -> >
   * Goal 32. Weak Mutation 63: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 1 -> 0
   * Goal 33. Weak Mutation 66: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> <=
   * Goal 34. Weak Mutation 67: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:90 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 6
  /*
   * 39 covered goals:
   * Goal 1. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 77
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 80
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 81
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 84
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 85
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 86
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 87
   * Goal 10. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 89
   * Goal 11. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 94
   * Goal 12. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 13. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 14. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
   * Goal 15. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 16. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
   * Goal 17. Weak Mutation 34: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:77 - ReplaceComparisonOperator != -> ==
   * Goal 18. Weak Mutation 36: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:81 - ReplaceComparisonOperator == -> -2
   * Goal 19. Weak Mutation 40: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 41: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - InsertUnaryOp Negation of i
   * Goal 21. Weak Mutation 42: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - InsertUnaryOp IINC 1 i
   * Goal 22. Weak Mutation 43: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - InsertUnaryOp IINC -1 i
   * Goal 23. Weak Mutation 44: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - ReplaceComparisonOperator >= -> -1
   * Goal 24. Weak Mutation 45: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 47: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp Negation of i
   * Goal 26. Weak Mutation 48: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp IINC 1 i
   * Goal 27. Weak Mutation 49: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp IINC -1 i
   * Goal 28. Weak Mutation 50: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp Negation of i
   * Goal 29. Weak Mutation 51: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp IINC 1 i
   * Goal 30. Weak Mutation 52: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp IINC -1 i
   * Goal 31. Weak Mutation 54: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - ReplaceComparisonOperator == -> >=
   * Goal 32. Weak Mutation 56: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:86 - ReplaceConstant - 1 -> 0
   * Goal 33. Weak Mutation 57: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:86 - ReplaceComparisonOperator != -> -1
   * Goal 34. Weak Mutation 60: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:87 - ReplaceConstant - -1 -> 0
   * Goal 35. Weak Mutation 61: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:87 - ReplaceConstant - -1 -> 1
   * Goal 36. Weak Mutation 62: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:87 - ReplaceConstant - -1 -> -2
   * Goal 37. Weak Mutation 63: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:89 - ReplaceConstant - 1 -> 0
   * Goal 38. Weak Mutation 64: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:89 - ReplaceComparisonOperator == -> -2
   * Goal 39. Weak Mutation 68: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 1 -> 0
   */

  @Test public void test06()  throws Throwable  {
      EuclideanIntegerPoint.clearORefMap();
	int[] intArray0 = new int[1];
      EuclideanIntegerPoint euclideanIntegerPoint0 = new EuclideanIntegerPoint(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 10;
      EuclideanIntegerPoint euclideanIntegerPoint1 = new EuclideanIntegerPoint(intArray1);
      boolean boolean0 = euclideanIntegerPoint1.equals(euclideanIntegerPoint0);
	List obj_list_7au3e = (List) EuclideanIntegerPoint.oref_map
			.get("equals(Object)0");
	Object target_obj_7au3e = obj_list_7au3e.get(0);
	assertFalse(
			"(E)0,(C)org.apache.commons.math.stat.clustering.EuclideanIntegerPoint,(MSIG)equals(Object)0,(I)0",
			((Boolean) target_obj_7au3e).booleanValue());
  }

  //Test case number: 7
  /*
   * 29 covered goals:
   * Goal 1. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 77
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 80
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 81
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 84
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 85
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 94
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 10. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 11. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
   * Goal 12. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 13. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
   * Goal 14. Weak Mutation 34: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:77 - ReplaceComparisonOperator != -> ==
   * Goal 15. Weak Mutation 36: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:81 - ReplaceComparisonOperator == -> -2
   * Goal 16. Weak Mutation 40: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - ReplaceConstant - 0 -> 1
   * Goal 17. Weak Mutation 41: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - InsertUnaryOp Negation of i
   * Goal 18. Weak Mutation 42: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - InsertUnaryOp IINC 1 i
   * Goal 19. Weak Mutation 43: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - InsertUnaryOp IINC -1 i
   * Goal 20. Weak Mutation 44: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - ReplaceComparisonOperator >= -> -1
   * Goal 21. Weak Mutation 45: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:84 - ReplaceComparisonOperator >= -> >
   * Goal 22. Weak Mutation 47: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp Negation of i
   * Goal 23. Weak Mutation 48: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp IINC 1 i
   * Goal 24. Weak Mutation 49: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp IINC -1 i
   * Goal 25. Weak Mutation 50: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp Negation of i
   * Goal 26. Weak Mutation 51: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp IINC 1 i
   * Goal 27. Weak Mutation 52: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - InsertUnaryOp IINC -1 i
   * Goal 28. Weak Mutation 53: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:85 - ReplaceComparisonOperator == -> -2
   * Goal 29. Weak Mutation 68: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:94 - ReplaceConstant - 1 -> 0
   */

  

  //Test case number: 8
  /*
   * 14 covered goals:
   * Goal 1. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 77
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 80
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 81
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 82
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
   * Goal 10. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 11. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
   * Goal 12. Weak Mutation 34: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:77 - ReplaceComparisonOperator != -> ==
   * Goal 13. Weak Mutation 37: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:81 - ReplaceComparisonOperator == -> >=
   * Goal 14. Weak Mutation 39: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:82 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 9
  /*
   * 13 covered goals:
   * Goal 1. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 77
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 78
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 10. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
   * Goal 11. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I
   * Goal 12. Weak Mutation 34: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:77 - ReplaceComparisonOperator != -> ==
   * Goal 13. Weak Mutation 35: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:78 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 10
  /*
   * 15 covered goals:
   * Goal 1. toString()Ljava/lang/String;_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;: Line 113
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;: Line 114
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;: Line 115
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;
   * Goal 10. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 11. Weak Mutation 102: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:113 - ReplaceConstant - ( -> 
   * Goal 12. Weak Mutation 103: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:115 - ReplaceConstant - 0 -> 1
   * Goal 13. Weak Mutation 104: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:115 - InsertUnaryOp Negation of i
   * Goal 14. Weak Mutation 105: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:115 - InsertUnaryOp IINC 1 i
   * Goal 15. Weak Mutation 106: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;:115 - InsertUnaryOp IINC -1 i
   */

  

  //Test case number: 11
  /*
   * 9 covered goals:
   * Goal 1. hashCode()I_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I: Line 100
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I: Line 101
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 9. Weak Mutation 69: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.hashCode()I:100 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 12
  /*
   * 11 covered goals:
   * Goal 1. equals(Ljava/lang/Object;)Z_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 77
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 80
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z: Line 81
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
   * Goal 10. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 11. Weak Mutation 34: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z:77 - ReplaceComparisonOperator != -> ==
   */

  

  //Test case number: 13
  /*
   * 8 covered goals:
   * Goal 1. distanceFrom(Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;)D_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;)D: Line 57
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;)D
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 8. Weak Mutation 0: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;)D:57 - ReplaceVariable p -> this
   */

  

  //Test case number: 14
  /*
   * 9 covered goals:
   * Goal 1. distanceFrom(Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;)D_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;)D: Line 57
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;)D
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 9. Weak Mutation 0: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;)D:57 - ReplaceVariable p -> this
   */

  

  //Test case number: 15
  /*
   * 9 covered goals:
   * Goal 1. centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 62
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 63
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   */

  

  //Test case number: 16
  /*
   * 26 covered goals:
   * Goal 1. centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;_java.lang.ArrayIndexOutOfBoundsException_IMPLICIT
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 62
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 63
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 64
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 65
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 10. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;
   * Goal 11. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 12. Weak Mutation 1: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:63 - ReplaceComparisonOperator == -> !=
   * Goal 13. Weak Mutation 2: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:64 - ReplaceConstant - 0 -> 1
   * Goal 14. Weak Mutation 3: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:64 - InsertUnaryOp Negation of i
   * Goal 15. Weak Mutation 4: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:64 - InsertUnaryOp IINC 1 i
   * Goal 16. Weak Mutation 5: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:64 - InsertUnaryOp IINC -1 i
   * Goal 17. Weak Mutation 6: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:64 - ReplaceComparisonOperator >= -> -1
   * Goal 18. Weak Mutation 9: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - InsertUnaryOp Negation of i
   * Goal 19. Weak Mutation 10: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - InsertUnaryOp IINC 1 i
   * Goal 20. Weak Mutation 11: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - InsertUnaryOp IINC -1 i
   * Goal 21. Weak Mutation 12: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - ReplaceVariable p -> this
   * Goal 22. Weak Mutation 13: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - InsertUnaryOp Negation of i
   * Goal 23. Weak Mutation 14: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - InsertUnaryOp IINC 1 i
   * Goal 24. Weak Mutation 15: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - InsertUnaryOp IINC -1 i
   * Goal 25. Weak Mutation 16: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - ReplaceArithmeticOperator + -> %
   * Goal 26. Weak Mutation 19: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:65 - ReplaceArithmeticOperator + -> /
   */

  

  //Test case number: 17
  /*
   * 23 covered goals:
   * Goal 1. centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;_java.lang.ArithmeticException_IMPLICIT
   * Goal 2. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 44
   * Goal 3. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V: Line 45
   * Goal 4. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 62
   * Goal 5. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 63
   * Goal 6. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 68
   * Goal 7. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;: Line 69
   * Goal 8. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.getPoint()[I: Line 52
   * Goal 9. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 10. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;
   * Goal 11. org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.<init>([I)V
   * Goal 12. Weak Mutation 1: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:63 - ReplaceComparisonOperator == -> !=
   * Goal 13. Weak Mutation 20: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:68 - ReplaceConstant - 0 -> 1
   * Goal 14. Weak Mutation 21: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:68 - InsertUnaryOp Negation of i
   * Goal 15. Weak Mutation 22: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:68 - InsertUnaryOp IINC 1 i
   * Goal 16. Weak Mutation 23: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:68 - InsertUnaryOp IINC -1 i
   * Goal 17. Weak Mutation 24: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:68 - ReplaceComparisonOperator >= -> -1
   * Goal 18. Weak Mutation 27: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:69 - InsertUnaryOp Negation of i
   * Goal 19. Weak Mutation 28: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:69 - InsertUnaryOp IINC 1 i
   * Goal 20. Weak Mutation 29: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:69 - InsertUnaryOp IINC -1 i
   * Goal 21. Weak Mutation 30: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:69 - ReplaceArithmeticOperator / -> +
   * Goal 22. Weak Mutation 32: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:69 - ReplaceArithmeticOperator / -> -
   * Goal 23. Weak Mutation 33: org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;:69 - ReplaceArithmeticOperator / -> *
   */
}
