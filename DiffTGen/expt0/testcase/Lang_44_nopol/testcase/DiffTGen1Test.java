/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 31 21:48:48 GMT 2017
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.apache.commons.lang.NumberUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.lang.reflect.Field;
import org.apache.commons.lang3.reflect.FieldUtils;
import static org.junit.Assert.*;
import myprinter.FieldPrinter;

public class DiffTGen1Test {

  //Test case number: 0
  /*
   * 149 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 623
   * Goal 2. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 626
   * Goal 3. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 627
   * Goal 4. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 628
   * Goal 5. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 629
   * Goal 6. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 630
   * Goal 7. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 631
   * Goal 8. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 633
   * Goal 9. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 634
   * Goal 10. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 635
   * Goal 11. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 636
   * Goal 12. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 637
   * Goal 13. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 641
   * Goal 14. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 642
   * Goal 15. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 645
   * Goal 16. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 17. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 18. Weak Mutation 372: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:623 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 374: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:628 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 375: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:629 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 376: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:630 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 377: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:631 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 378: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 379: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 0
   * Goal 25. Weak Mutation 380: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 1
   * Goal 26. Weak Mutation 381: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> -1
   * Goal 27. Weak Mutation 382: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 44
   * Goal 28. Weak Mutation 383: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 46
   * Goal 29. Weak Mutation 385: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceComparisonOperator != -> <
   * Goal 30. Weak Mutation 388: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 389: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable sz -> start
   * Goal 32. Weak Mutation 390: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of sz
   * Goal 33. Weak Mutation 391: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 sz
   * Goal 34. Weak Mutation 392: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 sz
   * Goal 35. Weak Mutation 393: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable start -> sz
   * Goal 36. Weak Mutation 394: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of start
   * Goal 37. Weak Mutation 395: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 start
   * Goal 38. Weak Mutation 396: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 start
   * Goal 39. Weak Mutation 397: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceConstant - 1 -> 0
   * Goal 40. Weak Mutation 398: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> %
   * Goal 41. Weak Mutation 399: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> -
   * Goal 42. Weak Mutation 400: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> *
   * Goal 43. Weak Mutation 401: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> /
   * Goal 44. Weak Mutation 402: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceComparisonOperator <= -> -1
   * Goal 45. Weak Mutation 405: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 46. Weak Mutation 406: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 47. Weak Mutation 407: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 48. Weak Mutation 408: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 49. Weak Mutation 409: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 0
   * Goal 50. Weak Mutation 410: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 1
   * Goal 51. Weak Mutation 411: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> -1
   * Goal 52. Weak Mutation 412: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 47
   * Goal 53. Weak Mutation 413: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 49
   * Goal 54. Weak Mutation 414: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> -1
   * Goal 55. Weak Mutation 417: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 56. Weak Mutation 418: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 57. Weak Mutation 419: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 58. Weak Mutation 420: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 59. Weak Mutation 421: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 1 -> 0
   * Goal 60. Weak Mutation 422: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> %
   * Goal 61. Weak Mutation 423: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> -
   * Goal 62. Weak Mutation 424: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> *
   * Goal 63. Weak Mutation 425: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> /
   * Goal 64. Weak Mutation 426: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 0
   * Goal 65. Weak Mutation 427: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 1
   * Goal 66. Weak Mutation 428: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> -1
   * Goal 67. Weak Mutation 429: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 119
   * Goal 68. Weak Mutation 430: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 121
   * Goal 69. Weak Mutation 431: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> -1
   * Goal 70. Weak Mutation 434: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceVariable start -> sz
   * Goal 71. Weak Mutation 435: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - InsertUnaryOp Negation of start
   * Goal 72. Weak Mutation 436: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - InsertUnaryOp IINC 1 start
   * Goal 73. Weak Mutation 437: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - InsertUnaryOp IINC -1 start
   * Goal 74. Weak Mutation 438: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> 0
   * Goal 75. Weak Mutation 439: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> 1
   * Goal 76. Weak Mutation 440: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> -1
   * Goal 77. Weak Mutation 441: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> 3
   * Goal 78. Weak Mutation 442: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> %
   * Goal 79. Weak Mutation 443: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> -
   * Goal 80. Weak Mutation 444: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> *
   * Goal 81. Weak Mutation 445: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> /
   * Goal 82. Weak Mutation 446: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable i -> start
   * Goal 83. Weak Mutation 447: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable i -> sz
   * Goal 84. Weak Mutation 448: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp Negation of i
   * Goal 85. Weak Mutation 449: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC 1 i
   * Goal 86. Weak Mutation 450: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC -1 i
   * Goal 87. Weak Mutation 451: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable sz -> start
   * Goal 88. Weak Mutation 452: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable sz -> i
   * Goal 89. Weak Mutation 453: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp Negation of sz
   * Goal 90. Weak Mutation 454: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC 1 sz
   * Goal 91. Weak Mutation 455: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC -1 sz
   * Goal 92. Weak Mutation 458: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceComparisonOperator != -> >
   * Goal 93. Weak Mutation 460: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - ReplaceVariable i -> start
   * Goal 94. Weak Mutation 461: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - ReplaceVariable i -> sz
   * Goal 95. Weak Mutation 462: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - InsertUnaryOp Negation of i
   * Goal 96. Weak Mutation 463: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - InsertUnaryOp IINC 1 i
   * Goal 97. Weak Mutation 464: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - InsertUnaryOp IINC -1 i
   * Goal 98. Weak Mutation 465: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - ReplaceComparisonOperator >= -> -1
   * Goal 99. Weak Mutation 468: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> start
   * Goal 100. Weak Mutation 469: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> sz
   * Goal 101. Weak Mutation 470: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp Negation of i
   * Goal 102. Weak Mutation 471: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC 1 i
   * Goal 103. Weak Mutation 472: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC -1 i
   * Goal 104. Weak Mutation 473: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> 0
   * Goal 105. Weak Mutation 474: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> 1
   * Goal 106. Weak Mutation 475: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> -1
   * Goal 107. Weak Mutation 476: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> 47
   * Goal 108. Weak Mutation 477: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> 49
   * Goal 109. Weak Mutation 478: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceComparisonOperator < -> !=
   * Goal 110. Weak Mutation 480: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceComparisonOperator < -> <=
   * Goal 111. Weak Mutation 481: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> start
   * Goal 112. Weak Mutation 482: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> sz
   * Goal 113. Weak Mutation 483: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp Negation of i
   * Goal 114. Weak Mutation 484: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC 1 i
   * Goal 115. Weak Mutation 485: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC -1 i
   * Goal 116. Weak Mutation 486: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 57 -> 0
   * Goal 117. Weak Mutation 487: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 57 -> 1
   * Goal 118. Weak Mutation 488: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 57 -> -1
   * Goal 119. Weak Mutation 489: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 57 -> 56
   * Goal 120. Weak Mutation 490: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 57 -> 58
   * Goal 121. Weak Mutation 491: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceComparisonOperator <= -> -1
   * Goal 122. Weak Mutation 493: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceComparisonOperator <= -> ==
   * Goal 123. Weak Mutation 494: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> start
   * Goal 124. Weak Mutation 495: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> sz
   * Goal 125. Weak Mutation 496: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp Negation of i
   * Goal 126. Weak Mutation 497: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC 1 i
   * Goal 127. Weak Mutation 498: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC -1 i
   * Goal 128. Weak Mutation 499: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> 0
   * Goal 129. Weak Mutation 500: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> 1
   * Goal 130. Weak Mutation 501: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> -1
   * Goal 131. Weak Mutation 502: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> 96
   * Goal 132. Weak Mutation 503: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> 98
   * Goal 133. Weak Mutation 504: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceComparisonOperator < -> !=
   * Goal 134. Weak Mutation 507: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> start
   * Goal 135. Weak Mutation 508: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> sz
   * Goal 136. Weak Mutation 509: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp Negation of i
   * Goal 137. Weak Mutation 510: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC 1 i
   * Goal 138. Weak Mutation 511: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC -1 i
   * Goal 139. Weak Mutation 512: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 102 -> 0
   * Goal 140. Weak Mutation 513: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 102 -> 1
   * Goal 141. Weak Mutation 514: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 102 -> -1
   * Goal 142. Weak Mutation 515: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 102 -> 101
   * Goal 143. Weak Mutation 516: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 102 -> 103
   * Goal 144. Weak Mutation 517: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceComparisonOperator <= -> -1
   * Goal 145. Weak Mutation 520: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> start
   * Goal 146. Weak Mutation 521: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> sz
   * Goal 147. Weak Mutation 522: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp Negation of i
   * Goal 148. Weak Mutation 523: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC 1 i
   * Goal 149. Weak Mutation 524: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC -1 i
   */

  

  //Test case number: 1
  /*
   * 125 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 623
   * Goal 2. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 626
   * Goal 3. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 627
   * Goal 4. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 628
   * Goal 5. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 629
   * Goal 6. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 630
   * Goal 7. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 631
   * Goal 8. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 633
   * Goal 9. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 634
   * Goal 10. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 635
   * Goal 11. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 636
   * Goal 12. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 637
   * Goal 13. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 641
   * Goal 14. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 642
   * Goal 15. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 645
   * Goal 16. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 17. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 18. Weak Mutation 372: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:623 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 374: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:628 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 375: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:629 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 376: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:630 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 377: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:631 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 378: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 379: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 0
   * Goal 25. Weak Mutation 380: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 1
   * Goal 26. Weak Mutation 381: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> -1
   * Goal 27. Weak Mutation 382: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 44
   * Goal 28. Weak Mutation 383: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 46
   * Goal 29. Weak Mutation 384: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceComparisonOperator != -> -1
   * Goal 30. Weak Mutation 387: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 1 -> 0
   * Goal 31. Weak Mutation 389: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable sz -> start
   * Goal 32. Weak Mutation 390: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of sz
   * Goal 33. Weak Mutation 391: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 sz
   * Goal 34. Weak Mutation 392: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 sz
   * Goal 35. Weak Mutation 393: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable start -> sz
   * Goal 36. Weak Mutation 394: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of start
   * Goal 37. Weak Mutation 395: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 start
   * Goal 38. Weak Mutation 396: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 start
   * Goal 39. Weak Mutation 397: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceConstant - 1 -> 0
   * Goal 40. Weak Mutation 398: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> %
   * Goal 41. Weak Mutation 399: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> -
   * Goal 42. Weak Mutation 400: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> *
   * Goal 43. Weak Mutation 401: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> /
   * Goal 44. Weak Mutation 402: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceComparisonOperator <= -> -1
   * Goal 45. Weak Mutation 405: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 46. Weak Mutation 406: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 47. Weak Mutation 407: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 48. Weak Mutation 408: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 49. Weak Mutation 409: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 0
   * Goal 50. Weak Mutation 410: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 1
   * Goal 51. Weak Mutation 411: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> -1
   * Goal 52. Weak Mutation 412: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 47
   * Goal 53. Weak Mutation 413: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 49
   * Goal 54. Weak Mutation 414: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> -1
   * Goal 55. Weak Mutation 417: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 56. Weak Mutation 418: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 57. Weak Mutation 419: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 58. Weak Mutation 420: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 59. Weak Mutation 421: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 1 -> 0
   * Goal 60. Weak Mutation 422: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> %
   * Goal 61. Weak Mutation 423: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> -
   * Goal 62. Weak Mutation 424: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> *
   * Goal 63. Weak Mutation 425: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> /
   * Goal 64. Weak Mutation 426: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 0
   * Goal 65. Weak Mutation 427: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 1
   * Goal 66. Weak Mutation 428: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> -1
   * Goal 67. Weak Mutation 429: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 119
   * Goal 68. Weak Mutation 430: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 121
   * Goal 69. Weak Mutation 431: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> -1
   * Goal 70. Weak Mutation 434: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceVariable start -> sz
   * Goal 71. Weak Mutation 435: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - InsertUnaryOp Negation of start
   * Goal 72. Weak Mutation 436: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - InsertUnaryOp IINC 1 start
   * Goal 73. Weak Mutation 437: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - InsertUnaryOp IINC -1 start
   * Goal 74. Weak Mutation 438: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> 0
   * Goal 75. Weak Mutation 439: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> 1
   * Goal 76. Weak Mutation 440: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> -1
   * Goal 77. Weak Mutation 441: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> 3
   * Goal 78. Weak Mutation 442: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> %
   * Goal 79. Weak Mutation 443: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> -
   * Goal 80. Weak Mutation 444: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> *
   * Goal 81. Weak Mutation 445: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> /
   * Goal 82. Weak Mutation 446: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable i -> start
   * Goal 83. Weak Mutation 447: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable i -> sz
   * Goal 84. Weak Mutation 448: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp Negation of i
   * Goal 85. Weak Mutation 449: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC 1 i
   * Goal 86. Weak Mutation 450: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC -1 i
   * Goal 87. Weak Mutation 451: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable sz -> start
   * Goal 88. Weak Mutation 452: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable sz -> i
   * Goal 89. Weak Mutation 453: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp Negation of sz
   * Goal 90. Weak Mutation 454: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC 1 sz
   * Goal 91. Weak Mutation 455: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC -1 sz
   * Goal 92. Weak Mutation 458: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceComparisonOperator != -> >
   * Goal 93. Weak Mutation 460: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - ReplaceVariable i -> start
   * Goal 94. Weak Mutation 461: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - ReplaceVariable i -> sz
   * Goal 95. Weak Mutation 462: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - InsertUnaryOp Negation of i
   * Goal 96. Weak Mutation 463: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - InsertUnaryOp IINC 1 i
   * Goal 97. Weak Mutation 464: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - InsertUnaryOp IINC -1 i
   * Goal 98. Weak Mutation 465: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - ReplaceComparisonOperator >= -> -1
   * Goal 99. Weak Mutation 468: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> start
   * Goal 100. Weak Mutation 469: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> sz
   * Goal 101. Weak Mutation 470: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp Negation of i
   * Goal 102. Weak Mutation 471: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC 1 i
   * Goal 103. Weak Mutation 472: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC -1 i
   * Goal 104. Weak Mutation 473: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> 0
   * Goal 105. Weak Mutation 474: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> 1
   * Goal 106. Weak Mutation 475: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> -1
   * Goal 107. Weak Mutation 476: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> 47
   * Goal 108. Weak Mutation 477: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> 49
   * Goal 109. Weak Mutation 479: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceComparisonOperator < -> -2
   * Goal 110. Weak Mutation 494: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> start
   * Goal 111. Weak Mutation 495: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> sz
   * Goal 112. Weak Mutation 496: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp Negation of i
   * Goal 113. Weak Mutation 497: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC 1 i
   * Goal 114. Weak Mutation 498: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC -1 i
   * Goal 115. Weak Mutation 499: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> 0
   * Goal 116. Weak Mutation 500: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> 1
   * Goal 117. Weak Mutation 501: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> -1
   * Goal 118. Weak Mutation 502: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> 96
   * Goal 119. Weak Mutation 503: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> 98
   * Goal 120. Weak Mutation 505: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceComparisonOperator < -> -2
   * Goal 121. Weak Mutation 520: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> start
   * Goal 122. Weak Mutation 521: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> sz
   * Goal 123. Weak Mutation 522: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp Negation of i
   * Goal 124. Weak Mutation 523: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC 1 i
   * Goal 125. Weak Mutation 524: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC -1 i
   */

  

  //Test case number: 2
  /*
   * 75 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 623
   * Goal 2. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 626
   * Goal 3. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 627
   * Goal 4. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 628
   * Goal 5. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 629
   * Goal 6. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 630
   * Goal 7. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 631
   * Goal 8. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 633
   * Goal 9. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 634
   * Goal 10. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 635
   * Goal 11. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 651
   * Goal 12. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 653
   * Goal 13. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 656
   * Goal 14. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 657
   * Goal 15. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 658
   * Goal 16. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 659
   * Goal 17. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 661
   * Goal 18. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 667
   * Goal 19. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 678
   * Goal 20. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 685
   * Goal 21. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 687
   * Goal 22. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 23. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 24. Weak Mutation 372: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:623 - ReplaceComparisonOperator == -> !=
   * Goal 25. Weak Mutation 374: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:628 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 375: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:629 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 376: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:630 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 377: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:631 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 378: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 30. Weak Mutation 379: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 0
   * Goal 31. Weak Mutation 380: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 1
   * Goal 32. Weak Mutation 381: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> -1
   * Goal 33. Weak Mutation 382: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 44
   * Goal 34. Weak Mutation 383: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 46
   * Goal 35. Weak Mutation 384: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceComparisonOperator != -> -1
   * Goal 36. Weak Mutation 387: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 1 -> 0
   * Goal 37. Weak Mutation 389: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable sz -> start
   * Goal 38. Weak Mutation 390: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of sz
   * Goal 39. Weak Mutation 391: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 sz
   * Goal 40. Weak Mutation 392: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 sz
   * Goal 41. Weak Mutation 393: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable start -> sz
   * Goal 42. Weak Mutation 394: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of start
   * Goal 43. Weak Mutation 395: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 start
   * Goal 44. Weak Mutation 396: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 start
   * Goal 45. Weak Mutation 397: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceConstant - 1 -> 0
   * Goal 46. Weak Mutation 398: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> %
   * Goal 47. Weak Mutation 399: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> -
   * Goal 48. Weak Mutation 400: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> *
   * Goal 49. Weak Mutation 401: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> /
   * Goal 50. Weak Mutation 402: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceComparisonOperator <= -> -1
   * Goal 51. Weak Mutation 405: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 52. Weak Mutation 406: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 53. Weak Mutation 407: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 54. Weak Mutation 408: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 55. Weak Mutation 409: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 0
   * Goal 56. Weak Mutation 410: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 1
   * Goal 57. Weak Mutation 411: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> -1
   * Goal 58. Weak Mutation 412: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 47
   * Goal 59. Weak Mutation 413: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 49
   * Goal 60. Weak Mutation 414: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> -1
   * Goal 61. Weak Mutation 417: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 62. Weak Mutation 418: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 63. Weak Mutation 419: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 64. Weak Mutation 420: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 65. Weak Mutation 421: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 1 -> 0
   * Goal 66. Weak Mutation 422: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> %
   * Goal 67. Weak Mutation 423: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> -
   * Goal 68. Weak Mutation 424: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> *
   * Goal 69. Weak Mutation 425: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> /
   * Goal 70. Weak Mutation 426: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 0
   * Goal 71. Weak Mutation 427: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 1
   * Goal 72. Weak Mutation 428: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> -1
   * Goal 73. Weak Mutation 429: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 119
   * Goal 74. Weak Mutation 430: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 121
   * Goal 75. Weak Mutation 433: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> >
   */

  

  //Test case number: 3
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 450
   * Goal 2. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 453
   * Goal 3. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 456
   * Goal 4. org.apache.commons.lang.NumberUtils.maximum(III)I
   * Goal 5. org.apache.commons.lang.NumberUtils.maximum(III)I
   * Goal 6. Weak Mutation 225: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp Negation of b
   * Goal 7. Weak Mutation 226: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC 1 b
   * Goal 8. Weak Mutation 227: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC -1 b
   * Goal 9. Weak Mutation 230: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp Negation of a
   * Goal 10. Weak Mutation 231: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC 1 a
   * Goal 11. Weak Mutation 232: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC -1 a
   * Goal 12. Weak Mutation 234: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - ReplaceComparisonOperator <= -> <
   * Goal 13. Weak Mutation 243: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp Negation of c
   * Goal 14. Weak Mutation 244: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC 1 c
   * Goal 15. Weak Mutation 245: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC -1 c
   * Goal 16. Weak Mutation 248: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp Negation of a
   * Goal 17. Weak Mutation 249: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC 1 a
   * Goal 18. Weak Mutation 250: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC -1 a
   * Goal 19. Weak Mutation 252: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceComparisonOperator <= -> <
   * Goal 20. Weak Mutation 261: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - InsertUnaryOp Negation of a
   * Goal 21. Weak Mutation 262: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - InsertUnaryOp IINC 1 a
   * Goal 22. Weak Mutation 263: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - InsertUnaryOp IINC -1 a
   */

  

  //Test case number: 4
  /*
   * 24 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.maximum(JJJ)J: Line 432
   * Goal 2. org.apache.commons.lang.NumberUtils.maximum(JJJ)J: Line 433
   * Goal 3. org.apache.commons.lang.NumberUtils.maximum(JJJ)J: Line 435
   * Goal 4. org.apache.commons.lang.NumberUtils.maximum(JJJ)J: Line 438
   * Goal 5. org.apache.commons.lang.NumberUtils.maximum(JJJ)J
   * Goal 6. org.apache.commons.lang.NumberUtils.maximum(JJJ)J
   * Goal 7. Weak Mutation 196: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - ReplaceVariable b -> a
   * Goal 8. Weak Mutation 197: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - ReplaceVariable b -> c
   * Goal 9. Weak Mutation 198: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - InsertUnaryOp Negation of b
   * Goal 10. Weak Mutation 199: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - ReplaceVariable a -> b
   * Goal 11. Weak Mutation 200: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - ReplaceVariable a -> c
   * Goal 12. Weak Mutation 201: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - InsertUnaryOp Negation of a
   * Goal 13. Weak Mutation 202: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - ReplaceComparisonOperator <= -> -1
   * Goal 14. Weak Mutation 205: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:433 - ReplaceVariable b -> a
   * Goal 15. Weak Mutation 206: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:433 - ReplaceVariable b -> c
   * Goal 16. Weak Mutation 207: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:433 - InsertUnaryOp Negation of b
   * Goal 17. Weak Mutation 208: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - ReplaceVariable c -> a
   * Goal 18. Weak Mutation 209: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - ReplaceVariable c -> b
   * Goal 19. Weak Mutation 210: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - InsertUnaryOp Negation of c
   * Goal 20. Weak Mutation 212: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - ReplaceVariable a -> c
   * Goal 21. Weak Mutation 213: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - InsertUnaryOp Negation of a
   * Goal 22. Weak Mutation 215: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - ReplaceComparisonOperator <= -> ==
   * Goal 23. Weak Mutation 221: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:438 - ReplaceVariable a -> c
   * Goal 24. Weak Mutation 222: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:438 - InsertUnaryOp Negation of a
   */

  

  //Test case number: 5
  /*
   * 18 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.maximum(JJJ)J: Line 432
   * Goal 2. org.apache.commons.lang.NumberUtils.maximum(JJJ)J: Line 435
   * Goal 3. org.apache.commons.lang.NumberUtils.maximum(JJJ)J: Line 438
   * Goal 4. org.apache.commons.lang.NumberUtils.maximum(JJJ)J
   * Goal 5. org.apache.commons.lang.NumberUtils.maximum(JJJ)J
   * Goal 6. Weak Mutation 196: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - ReplaceVariable b -> a
   * Goal 7. Weak Mutation 197: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - ReplaceVariable b -> c
   * Goal 8. Weak Mutation 198: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - InsertUnaryOp Negation of b
   * Goal 9. Weak Mutation 199: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - ReplaceVariable a -> b
   * Goal 10. Weak Mutation 201: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - InsertUnaryOp Negation of a
   * Goal 11. Weak Mutation 203: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - ReplaceComparisonOperator <= -> ==
   * Goal 12. Weak Mutation 209: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - ReplaceVariable c -> b
   * Goal 13. Weak Mutation 210: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - InsertUnaryOp Negation of c
   * Goal 14. Weak Mutation 211: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - ReplaceVariable a -> b
   * Goal 15. Weak Mutation 213: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - InsertUnaryOp Negation of a
   * Goal 16. Weak Mutation 216: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - ReplaceComparisonOperator <= -> <
   * Goal 17. Weak Mutation 220: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:438 - ReplaceVariable a -> b
   * Goal 18. Weak Mutation 222: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:438 - InsertUnaryOp Negation of a
   */

  

  //Test case number: 6
  /*
   * 91 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 2. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 3. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 4. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 145
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 152
   * Goal 6. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 155
   * Goal 7. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 159
   * Goal 8. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 160
   * Goal 9. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 162
   * Goal 10. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 174
   * Goal 11. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 177
   * Goal 12. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 179
   * Goal 13. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 181
   * Goal 14. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 182
   * Goal 15. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 185
   * Goal 16. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 188
   * Goal 17. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 189
   * Goal 18. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 190
   * Goal 19. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 241
   * Goal 20. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 302
   * Goal 21. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 305
   * Goal 22. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 306
   * Goal 23. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 307
   * Goal 24. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 25. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 26. Weak Mutation 6: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> <
   * Goal 27. Weak Mutation 9: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - -- -> 
   * Goal 28. Weak Mutation 10: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 12: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceComparisonOperator <= -> ==
   * Goal 30. Weak Mutation 14: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0x -> 
   * Goal 31. Weak Mutation 15: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 17: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator > -> !=
   * Goal 33. Weak Mutation 19: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - -0x -> 
   * Goal 34. Weak Mutation 20: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 22: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator <= -> ==
   * Goal 36. Weak Mutation 24: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceConstant - 1 -> 0
   * Goal 37. Weak Mutation 25: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> +
   * Goal 38. Weak Mutation 26: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> %
   * Goal 39. Weak Mutation 27: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> *
   * Goal 40. Weak Mutation 28: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> /
   * Goal 41. Weak Mutation 29: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 0
   * Goal 42. Weak Mutation 30: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 1
   * Goal 43. Weak Mutation 31: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> -1
   * Goal 44. Weak Mutation 32: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 45
   * Goal 45. Weak Mutation 33: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 47
   * Goal 46. Weak Mutation 34: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 0
   * Goal 47. Weak Mutation 35: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 1
   * Goal 48. Weak Mutation 36: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> -1
   * Goal 49. Weak Mutation 37: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 100
   * Goal 50. Weak Mutation 38: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 102
   * Goal 51. Weak Mutation 39: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 0
   * Goal 52. Weak Mutation 40: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 1
   * Goal 53. Weak Mutation 41: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> -1
   * Goal 54. Weak Mutation 42: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 68
   * Goal 55. Weak Mutation 43: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 70
   * Goal 56. Weak Mutation 44: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 57. Weak Mutation 45: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 58. Weak Mutation 46: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 59. Weak Mutation 47: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 60. Weak Mutation 48: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 1 -> 0
   * Goal 61. Weak Mutation 49: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 62. Weak Mutation 50: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 63. Weak Mutation 51: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 64. Weak Mutation 52: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 65. Weak Mutation 54: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp Negation of decPos
   * Goal 66. Weak Mutation 55: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC 1 decPos
   * Goal 67. Weak Mutation 56: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC -1 decPos
   * Goal 68. Weak Mutation 57: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 0
   * Goal 69. Weak Mutation 58: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 1
   * Goal 70. Weak Mutation 59: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> -2
   * Goal 71. Weak Mutation 61: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceComparisonOperator <= -> <
   * Goal 72. Weak Mutation 98: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:302 - ReplaceComparisonOperator != null -> = null
   * Goal 73. Weak Mutation 100: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceConstant - 1 -> 0
   * Goal 74. Weak Mutation 101: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> +
   * Goal 75. Weak Mutation 102: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> %
   * Goal 76. Weak Mutation 103: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> *
   * Goal 77. Weak Mutation 104: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> /
   * Goal 78. Weak Mutation 105: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp Negation of i
   * Goal 79. Weak Mutation 106: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC 1 i
   * Goal 80. Weak Mutation 107: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC -1 i
   * Goal 81. Weak Mutation 109: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceComparisonOperator < -> !=
   * Goal 82. Weak Mutation 111: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp Negation of i
   * Goal 83. Weak Mutation 112: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC 1 i
   * Goal 84. Weak Mutation 113: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC -1 i
   * Goal 85. Weak Mutation 114: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 0
   * Goal 86. Weak Mutation 115: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 1
   * Goal 87. Weak Mutation 116: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> -1
   * Goal 88. Weak Mutation 117: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 47
   * Goal 89. Weak Mutation 118: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 49
   * Goal 90. Weak Mutation 121: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceComparisonOperator == -> <=
   * Goal 91. Weak Mutation 122: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:307 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 7
  /*
   * 19 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 2. org.apache.commons.lang.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 347
   * Goal 3. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 4. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 145
   * Goal 6. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 152
   * Goal 7. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 153
   * Goal 8. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 9. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 10. Weak Mutation 6: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> <
   * Goal 11. Weak Mutation 9: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - -- -> 
   * Goal 12. Weak Mutation 10: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - 0 -> 1
   * Goal 13. Weak Mutation 12: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceComparisonOperator <= -> ==
   * Goal 14. Weak Mutation 14: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0x -> 
   * Goal 15. Weak Mutation 15: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 17: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator > -> !=
   * Goal 17. Weak Mutation 19: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - -0x -> 
   * Goal 18. Weak Mutation 20: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 21: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator <= -> -1
   */

  

  //Test case number: 8
  /*
   * 3 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 358
   * Goal 2. org.apache.commons.lang.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;
   * Goal 3. org.apache.commons.lang.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;
   */

  

  //Test case number: 9
  /*
   * 125 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 2. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 3. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 4. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 145
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 152
   * Goal 6. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 155
   * Goal 7. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 159
   * Goal 8. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 160
   * Goal 9. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 162
   * Goal 10. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 164
   * Goal 11. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 165
   * Goal 12. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 168
   * Goal 13. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 172
   * Goal 14. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 181
   * Goal 15. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 182
   * Goal 16. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 183
   * Goal 17. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 188
   * Goal 18. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 189
   * Goal 19. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 190
   * Goal 20. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 241
   * Goal 21. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 302
   * Goal 22. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 305
   * Goal 23. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 306
   * Goal 24. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 307
   * Goal 25. org.apache.commons.lang.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;
   * Goal 26. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 27. org.apache.commons.lang.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;
   * Goal 28. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 29. Weak Mutation 6: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> <
   * Goal 30. Weak Mutation 9: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - -- -> 
   * Goal 31. Weak Mutation 10: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 12: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceComparisonOperator <= -> ==
   * Goal 33. Weak Mutation 14: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0x -> 
   * Goal 34. Weak Mutation 15: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 17: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator > -> !=
   * Goal 36. Weak Mutation 19: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - -0x -> 
   * Goal 37. Weak Mutation 20: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 22: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator <= -> ==
   * Goal 39. Weak Mutation 24: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceConstant - 1 -> 0
   * Goal 40. Weak Mutation 25: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> +
   * Goal 41. Weak Mutation 26: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> %
   * Goal 42. Weak Mutation 27: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> *
   * Goal 43. Weak Mutation 28: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> /
   * Goal 44. Weak Mutation 29: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 0
   * Goal 45. Weak Mutation 30: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 1
   * Goal 46. Weak Mutation 31: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> -1
   * Goal 47. Weak Mutation 32: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 45
   * Goal 48. Weak Mutation 33: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 47
   * Goal 49. Weak Mutation 34: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 0
   * Goal 50. Weak Mutation 35: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 1
   * Goal 51. Weak Mutation 36: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> -1
   * Goal 52. Weak Mutation 37: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 100
   * Goal 53. Weak Mutation 38: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 102
   * Goal 54. Weak Mutation 39: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 0
   * Goal 55. Weak Mutation 40: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 1
   * Goal 56. Weak Mutation 41: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> -1
   * Goal 57. Weak Mutation 42: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 68
   * Goal 58. Weak Mutation 43: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 70
   * Goal 59. Weak Mutation 44: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 60. Weak Mutation 45: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 61. Weak Mutation 46: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 62. Weak Mutation 47: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 63. Weak Mutation 48: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 1 -> 0
   * Goal 64. Weak Mutation 49: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 65. Weak Mutation 50: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 66. Weak Mutation 51: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 67. Weak Mutation 52: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 68. Weak Mutation 53: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceVariable decPos -> expPos
   * Goal 69. Weak Mutation 54: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp Negation of decPos
   * Goal 70. Weak Mutation 55: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC 1 decPos
   * Goal 71. Weak Mutation 56: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC -1 decPos
   * Goal 72. Weak Mutation 57: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 0
   * Goal 73. Weak Mutation 58: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 1
   * Goal 74. Weak Mutation 59: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> -2
   * Goal 75. Weak Mutation 60: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceComparisonOperator <= -> -1
   * Goal 76. Weak Mutation 63: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceVariable expPos -> decPos
   * Goal 77. Weak Mutation 64: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - InsertUnaryOp Negation of expPos
   * Goal 78. Weak Mutation 65: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - InsertUnaryOp IINC 1 expPos
   * Goal 79. Weak Mutation 66: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - InsertUnaryOp IINC -1 expPos
   * Goal 80. Weak Mutation 67: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceConstant - -1 -> 0
   * Goal 81. Weak Mutation 68: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceConstant - -1 -> 1
   * Goal 82. Weak Mutation 69: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceConstant - -1 -> -2
   * Goal 83. Weak Mutation 70: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceComparisonOperator <= -> -1
   * Goal 84. Weak Mutation 73: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - ReplaceVariable expPos -> decPos
   * Goal 85. Weak Mutation 74: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - InsertUnaryOp Negation of expPos
   * Goal 86. Weak Mutation 75: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - InsertUnaryOp IINC 1 expPos
   * Goal 87. Weak Mutation 76: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - InsertUnaryOp IINC -1 expPos
   * Goal 88. Weak Mutation 77: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - ReplaceVariable decPos -> expPos
   * Goal 89. Weak Mutation 78: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - InsertUnaryOp Negation of decPos
   * Goal 90. Weak Mutation 79: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - InsertUnaryOp IINC 1 decPos
   * Goal 91. Weak Mutation 80: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - InsertUnaryOp IINC -1 decPos
   * Goal 92. Weak Mutation 83: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - ReplaceComparisonOperator >= -> ==
   * Goal 93. Weak Mutation 85: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:168 - ReplaceVariable decPos -> expPos
   * Goal 94. Weak Mutation 86: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:168 - InsertUnaryOp Negation of decPos
   * Goal 95. Weak Mutation 87: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:168 - InsertUnaryOp IINC 1 decPos
   * Goal 96. Weak Mutation 88: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:168 - InsertUnaryOp IINC -1 decPos
   * Goal 97. Weak Mutation 89: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:168 - ReplaceConstant - 1 -> 0
   * Goal 98. Weak Mutation 90: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:168 - ReplaceArithmeticOperator + -> %
   * Goal 99. Weak Mutation 91: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:168 - ReplaceArithmeticOperator + -> -
   * Goal 100. Weak Mutation 92: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:168 - ReplaceArithmeticOperator + -> *
   * Goal 101. Weak Mutation 93: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:168 - ReplaceArithmeticOperator + -> /
   * Goal 102. Weak Mutation 94: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:168 - ReplaceVariable expPos -> decPos
   * Goal 103. Weak Mutation 95: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:168 - InsertUnaryOp Negation of expPos
   * Goal 104. Weak Mutation 96: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:168 - InsertUnaryOp IINC 1 expPos
   * Goal 105. Weak Mutation 97: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:168 - InsertUnaryOp IINC -1 expPos
   * Goal 106. Weak Mutation 98: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:302 - ReplaceComparisonOperator != null -> = null
   * Goal 107. Weak Mutation 100: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceConstant - 1 -> 0
   * Goal 108. Weak Mutation 101: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> +
   * Goal 109. Weak Mutation 102: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> %
   * Goal 110. Weak Mutation 103: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> *
   * Goal 111. Weak Mutation 104: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> /
   * Goal 112. Weak Mutation 105: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp Negation of i
   * Goal 113. Weak Mutation 106: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC 1 i
   * Goal 114. Weak Mutation 107: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC -1 i
   * Goal 115. Weak Mutation 109: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceComparisonOperator < -> !=
   * Goal 116. Weak Mutation 111: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp Negation of i
   * Goal 117. Weak Mutation 112: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC 1 i
   * Goal 118. Weak Mutation 113: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC -1 i
   * Goal 119. Weak Mutation 114: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 0
   * Goal 120. Weak Mutation 115: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 1
   * Goal 121. Weak Mutation 116: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> -1
   * Goal 122. Weak Mutation 117: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 47
   * Goal 123. Weak Mutation 118: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 49
   * Goal 124. Weak Mutation 120: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceComparisonOperator == -> >=
   * Goal 125. Weak Mutation 122: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:307 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 10
  /*
   * 74 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 2. org.apache.commons.lang.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 369
   * Goal 3. org.apache.commons.lang.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 347
   * Goal 4. org.apache.commons.lang.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 358
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 6. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 7. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 145
   * Goal 8. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 152
   * Goal 9. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 155
   * Goal 10. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 159
   * Goal 11. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 160
   * Goal 12. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 162
   * Goal 13. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 174
   * Goal 14. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 177
   * Goal 15. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 179
   * Goal 16. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 181
   * Goal 17. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 247
   * Goal 18. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 250
   * Goal 19. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 252
   * Goal 20. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 255
   * Goal 21. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 256
   * Goal 22. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 260
   * Goal 23. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 261
   * Goal 24. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 264
   * Goal 25. org.apache.commons.lang.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 26. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 27. org.apache.commons.lang.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;
   * Goal 28. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 29. Weak Mutation 6: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> <
   * Goal 30. Weak Mutation 9: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - -- -> 
   * Goal 31. Weak Mutation 10: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 12: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceComparisonOperator <= -> ==
   * Goal 33. Weak Mutation 14: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0x -> 
   * Goal 34. Weak Mutation 15: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 17: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator > -> !=
   * Goal 36. Weak Mutation 19: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - -0x -> 
   * Goal 37. Weak Mutation 20: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 22: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator <= -> ==
   * Goal 39. Weak Mutation 24: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceConstant - 1 -> 0
   * Goal 40. Weak Mutation 25: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> +
   * Goal 41. Weak Mutation 26: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> %
   * Goal 42. Weak Mutation 27: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> *
   * Goal 43. Weak Mutation 28: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> /
   * Goal 44. Weak Mutation 29: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 0
   * Goal 45. Weak Mutation 30: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 1
   * Goal 46. Weak Mutation 31: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> -1
   * Goal 47. Weak Mutation 32: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 45
   * Goal 48. Weak Mutation 33: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 47
   * Goal 49. Weak Mutation 34: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 0
   * Goal 50. Weak Mutation 35: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 1
   * Goal 51. Weak Mutation 36: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> -1
   * Goal 52. Weak Mutation 37: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 100
   * Goal 53. Weak Mutation 38: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 102
   * Goal 54. Weak Mutation 39: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 0
   * Goal 55. Weak Mutation 40: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 1
   * Goal 56. Weak Mutation 41: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> -1
   * Goal 57. Weak Mutation 42: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 68
   * Goal 58. Weak Mutation 43: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 70
   * Goal 59. Weak Mutation 44: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 60. Weak Mutation 45: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 61. Weak Mutation 46: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 62. Weak Mutation 47: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 63. Weak Mutation 48: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 1 -> 0
   * Goal 64. Weak Mutation 49: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 65. Weak Mutation 50: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 66. Weak Mutation 51: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 67. Weak Mutation 52: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 68. Weak Mutation 54: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp Negation of decPos
   * Goal 69. Weak Mutation 55: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC 1 decPos
   * Goal 70. Weak Mutation 56: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC -1 decPos
   * Goal 71. Weak Mutation 57: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 0
   * Goal 72. Weak Mutation 58: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 1
   * Goal 73. Weak Mutation 59: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> -2
   * Goal 74. Weak Mutation 61: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceComparisonOperator <= -> <
   */

  

  //Test case number: 11
  /*
   * 8 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I: Line 74
   * Goal 2. org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I: Line 75
   * Goal 3. org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I: Line 76
   * Goal 4. org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 5. org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I
   * Goal 6. Weak Mutation 1: org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I:76 - InsertUnaryOp Negation of defaultValue
   * Goal 7. Weak Mutation 2: org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I:76 - InsertUnaryOp IINC 1 defaultValue
   * Goal 8. Weak Mutation 3: org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I:76 - InsertUnaryOp IINC -1 defaultValue
   */

  

  //Test case number: 12
  /*
   * 10 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;)I: Line 61
   * Goal 2. org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I: Line 74
   * Goal 3. org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I: Line 75
   * Goal 4. org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I: Line 76
   * Goal 5. org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;)I
   * Goal 6. org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;)I
   * Goal 7. Weak Mutation 0: org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;)I:61 - ReplaceConstant - 0 -> 1
   * Goal 8. Weak Mutation 1: org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I:76 - InsertUnaryOp Negation of defaultValue
   * Goal 9. Weak Mutation 2: org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I:76 - InsertUnaryOp IINC 1 defaultValue
   * Goal 10. Weak Mutation 3: org.apache.commons.lang.NumberUtils.stringToInt(Ljava/lang/String;I)I:76 - InsertUnaryOp IINC -1 defaultValue
   */

  

  //Test case number: 13
  /*
   * 25 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.minimum(JJJ)J: Line 396
   * Goal 2. org.apache.commons.lang.NumberUtils.minimum(JJJ)J: Line 399
   * Goal 3. org.apache.commons.lang.NumberUtils.minimum(JJJ)J: Line 400
   * Goal 4. org.apache.commons.lang.NumberUtils.minimum(JJJ)J: Line 402
   * Goal 5. org.apache.commons.lang.NumberUtils.minimum(JJJ)J
   * Goal 6. org.apache.commons.lang.NumberUtils.minimum(JJJ)J
   * Goal 7. Weak Mutation 128: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - ReplaceVariable b -> a
   * Goal 8. Weak Mutation 129: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - ReplaceVariable b -> c
   * Goal 9. Weak Mutation 130: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - InsertUnaryOp Negation of b
   * Goal 10. Weak Mutation 131: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - ReplaceVariable a -> b
   * Goal 11. Weak Mutation 132: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - ReplaceVariable a -> c
   * Goal 12. Weak Mutation 133: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - InsertUnaryOp Negation of a
   * Goal 13. Weak Mutation 135: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - ReplaceComparisonOperator >= -> ==
   * Goal 14. Weak Mutation 140: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - ReplaceVariable c -> a
   * Goal 15. Weak Mutation 141: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - ReplaceVariable c -> b
   * Goal 16. Weak Mutation 142: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - InsertUnaryOp Negation of c
   * Goal 17. Weak Mutation 143: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - ReplaceVariable a -> b
   * Goal 18. Weak Mutation 144: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - ReplaceVariable a -> c
   * Goal 19. Weak Mutation 145: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - InsertUnaryOp Negation of a
   * Goal 20. Weak Mutation 146: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - ReplaceComparisonOperator >= -> -1
   * Goal 21. Weak Mutation 149: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:400 - ReplaceVariable c -> a
   * Goal 22. Weak Mutation 150: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:400 - ReplaceVariable c -> b
   * Goal 23. Weak Mutation 151: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:400 - InsertUnaryOp Negation of c
   * Goal 24. Weak Mutation 152: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:402 - ReplaceVariable a -> b
   * Goal 25. Weak Mutation 154: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:402 - InsertUnaryOp Negation of a
   */

  

  //Test case number: 14
  /*
   * 24 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.minimum(JJJ)J: Line 396
   * Goal 2. org.apache.commons.lang.NumberUtils.minimum(JJJ)J: Line 397
   * Goal 3. org.apache.commons.lang.NumberUtils.minimum(JJJ)J: Line 399
   * Goal 4. org.apache.commons.lang.NumberUtils.minimum(JJJ)J: Line 402
   * Goal 5. org.apache.commons.lang.NumberUtils.minimum(JJJ)J
   * Goal 6. org.apache.commons.lang.NumberUtils.minimum(JJJ)J
   * Goal 7. Weak Mutation 128: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - ReplaceVariable b -> a
   * Goal 8. Weak Mutation 129: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - ReplaceVariable b -> c
   * Goal 9. Weak Mutation 130: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - InsertUnaryOp Negation of b
   * Goal 10. Weak Mutation 131: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - ReplaceVariable a -> b
   * Goal 11. Weak Mutation 132: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - ReplaceVariable a -> c
   * Goal 12. Weak Mutation 133: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - InsertUnaryOp Negation of a
   * Goal 13. Weak Mutation 134: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - ReplaceComparisonOperator >= -> -1
   * Goal 14. Weak Mutation 137: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:397 - ReplaceVariable b -> a
   * Goal 15. Weak Mutation 138: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:397 - ReplaceVariable b -> c
   * Goal 16. Weak Mutation 139: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:397 - InsertUnaryOp Negation of b
   * Goal 17. Weak Mutation 140: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - ReplaceVariable c -> a
   * Goal 18. Weak Mutation 141: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - ReplaceVariable c -> b
   * Goal 19. Weak Mutation 142: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - InsertUnaryOp Negation of c
   * Goal 20. Weak Mutation 144: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - ReplaceVariable a -> c
   * Goal 21. Weak Mutation 145: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - InsertUnaryOp Negation of a
   * Goal 22. Weak Mutation 147: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - ReplaceComparisonOperator >= -> ==
   * Goal 23. Weak Mutation 153: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:402 - ReplaceVariable a -> c
   * Goal 24. Weak Mutation 154: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:402 - InsertUnaryOp Negation of a
   */

  

  //Test case number: 15
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.minimum(JJJ)J: Line 396
   * Goal 2. org.apache.commons.lang.NumberUtils.minimum(JJJ)J: Line 399
   * Goal 3. org.apache.commons.lang.NumberUtils.minimum(JJJ)J: Line 402
   * Goal 4. org.apache.commons.lang.NumberUtils.minimum(JJJ)J
   * Goal 5. org.apache.commons.lang.NumberUtils.minimum(JJJ)J
   * Goal 6. Weak Mutation 130: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - InsertUnaryOp Negation of b
   * Goal 7. Weak Mutation 133: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - InsertUnaryOp Negation of a
   * Goal 8. Weak Mutation 136: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:396 - ReplaceComparisonOperator >= -> >
   * Goal 9. Weak Mutation 142: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - InsertUnaryOp Negation of c
   * Goal 10. Weak Mutation 145: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - InsertUnaryOp Negation of a
   * Goal 11. Weak Mutation 148: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:399 - ReplaceComparisonOperator >= -> >
   * Goal 12. Weak Mutation 154: org.apache.commons.lang.NumberUtils.minimum(JJJ)J:402 - InsertUnaryOp Negation of a
   */

  

  //Test case number: 16
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.minimum(III)I: Line 414
   * Goal 2. org.apache.commons.lang.NumberUtils.minimum(III)I: Line 417
   * Goal 3. org.apache.commons.lang.NumberUtils.minimum(III)I: Line 418
   * Goal 4. org.apache.commons.lang.NumberUtils.minimum(III)I: Line 420
   * Goal 5. org.apache.commons.lang.NumberUtils.minimum(III)I
   * Goal 6. org.apache.commons.lang.NumberUtils.minimum(III)I
   * Goal 7. Weak Mutation 156: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - ReplaceVariable b -> c
   * Goal 8. Weak Mutation 157: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp Negation of b
   * Goal 9. Weak Mutation 158: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp IINC 1 b
   * Goal 10. Weak Mutation 159: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp IINC -1 b
   * Goal 11. Weak Mutation 161: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - ReplaceVariable a -> c
   * Goal 12. Weak Mutation 162: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp Negation of a
   * Goal 13. Weak Mutation 163: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp IINC 1 a
   * Goal 14. Weak Mutation 164: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp IINC -1 a
   * Goal 15. Weak Mutation 166: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - ReplaceComparisonOperator >= -> >
   * Goal 16. Weak Mutation 173: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - ReplaceVariable c -> a
   * Goal 17. Weak Mutation 174: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - ReplaceVariable c -> b
   * Goal 18. Weak Mutation 175: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp Negation of c
   * Goal 19. Weak Mutation 176: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp IINC 1 c
   * Goal 20. Weak Mutation 177: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp IINC -1 c
   * Goal 21. Weak Mutation 179: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - ReplaceVariable a -> c
   * Goal 22. Weak Mutation 180: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp Negation of a
   * Goal 23. Weak Mutation 181: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp IINC 1 a
   * Goal 24. Weak Mutation 182: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp IINC -1 a
   * Goal 25. Weak Mutation 183: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - ReplaceComparisonOperator >= -> -1
   * Goal 26. Weak Mutation 186: org.apache.commons.lang.NumberUtils.minimum(III)I:418 - ReplaceVariable c -> a
   * Goal 27. Weak Mutation 187: org.apache.commons.lang.NumberUtils.minimum(III)I:418 - ReplaceVariable c -> b
   * Goal 28. Weak Mutation 188: org.apache.commons.lang.NumberUtils.minimum(III)I:418 - InsertUnaryOp Negation of c
   * Goal 29. Weak Mutation 189: org.apache.commons.lang.NumberUtils.minimum(III)I:418 - InsertUnaryOp IINC 1 c
   * Goal 30. Weak Mutation 190: org.apache.commons.lang.NumberUtils.minimum(III)I:418 - InsertUnaryOp IINC -1 c
   * Goal 31. Weak Mutation 191: org.apache.commons.lang.NumberUtils.minimum(III)I:420 - ReplaceVariable a -> b
   * Goal 32. Weak Mutation 193: org.apache.commons.lang.NumberUtils.minimum(III)I:420 - InsertUnaryOp Negation of a
   * Goal 33. Weak Mutation 194: org.apache.commons.lang.NumberUtils.minimum(III)I:420 - InsertUnaryOp IINC 1 a
   * Goal 34. Weak Mutation 195: org.apache.commons.lang.NumberUtils.minimum(III)I:420 - InsertUnaryOp IINC -1 a
   */

  

  //Test case number: 17
  /*
   * 36 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.minimum(III)I: Line 414
   * Goal 2. org.apache.commons.lang.NumberUtils.minimum(III)I: Line 415
   * Goal 3. org.apache.commons.lang.NumberUtils.minimum(III)I: Line 417
   * Goal 4. org.apache.commons.lang.NumberUtils.minimum(III)I: Line 420
   * Goal 5. org.apache.commons.lang.NumberUtils.minimum(III)I
   * Goal 6. org.apache.commons.lang.NumberUtils.minimum(III)I
   * Goal 7. Weak Mutation 155: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - ReplaceVariable b -> a
   * Goal 8. Weak Mutation 156: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - ReplaceVariable b -> c
   * Goal 9. Weak Mutation 157: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp Negation of b
   * Goal 10. Weak Mutation 158: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp IINC 1 b
   * Goal 11. Weak Mutation 159: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp IINC -1 b
   * Goal 12. Weak Mutation 160: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - ReplaceVariable a -> b
   * Goal 13. Weak Mutation 161: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - ReplaceVariable a -> c
   * Goal 14. Weak Mutation 162: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp Negation of a
   * Goal 15. Weak Mutation 163: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp IINC 1 a
   * Goal 16. Weak Mutation 164: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp IINC -1 a
   * Goal 17. Weak Mutation 165: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - ReplaceComparisonOperator >= -> -1
   * Goal 18. Weak Mutation 168: org.apache.commons.lang.NumberUtils.minimum(III)I:415 - ReplaceVariable b -> a
   * Goal 19. Weak Mutation 169: org.apache.commons.lang.NumberUtils.minimum(III)I:415 - ReplaceVariable b -> c
   * Goal 20. Weak Mutation 170: org.apache.commons.lang.NumberUtils.minimum(III)I:415 - InsertUnaryOp Negation of b
   * Goal 21. Weak Mutation 171: org.apache.commons.lang.NumberUtils.minimum(III)I:415 - InsertUnaryOp IINC 1 b
   * Goal 22. Weak Mutation 172: org.apache.commons.lang.NumberUtils.minimum(III)I:415 - InsertUnaryOp IINC -1 b
   * Goal 23. Weak Mutation 173: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - ReplaceVariable c -> a
   * Goal 24. Weak Mutation 174: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - ReplaceVariable c -> b
   * Goal 25. Weak Mutation 175: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp Negation of c
   * Goal 26. Weak Mutation 176: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp IINC 1 c
   * Goal 27. Weak Mutation 177: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp IINC -1 c
   * Goal 28. Weak Mutation 179: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - ReplaceVariable a -> c
   * Goal 29. Weak Mutation 180: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp Negation of a
   * Goal 30. Weak Mutation 181: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp IINC 1 a
   * Goal 31. Weak Mutation 182: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp IINC -1 a
   * Goal 32. Weak Mutation 185: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - ReplaceComparisonOperator >= -> ==
   * Goal 33. Weak Mutation 192: org.apache.commons.lang.NumberUtils.minimum(III)I:420 - ReplaceVariable a -> c
   * Goal 34. Weak Mutation 193: org.apache.commons.lang.NumberUtils.minimum(III)I:420 - InsertUnaryOp Negation of a
   * Goal 35. Weak Mutation 194: org.apache.commons.lang.NumberUtils.minimum(III)I:420 - InsertUnaryOp IINC 1 a
   * Goal 36. Weak Mutation 195: org.apache.commons.lang.NumberUtils.minimum(III)I:420 - InsertUnaryOp IINC -1 a
   */

  

  //Test case number: 18
  /*
   * 28 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.minimum(III)I: Line 414
   * Goal 2. org.apache.commons.lang.NumberUtils.minimum(III)I: Line 417
   * Goal 3. org.apache.commons.lang.NumberUtils.minimum(III)I: Line 420
   * Goal 4. org.apache.commons.lang.NumberUtils.minimum(III)I
   * Goal 5. org.apache.commons.lang.NumberUtils.minimum(III)I
   * Goal 6. Weak Mutation 155: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - ReplaceVariable b -> a
   * Goal 7. Weak Mutation 156: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - ReplaceVariable b -> c
   * Goal 8. Weak Mutation 157: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp Negation of b
   * Goal 9. Weak Mutation 158: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp IINC 1 b
   * Goal 10. Weak Mutation 159: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp IINC -1 b
   * Goal 11. Weak Mutation 160: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - ReplaceVariable a -> b
   * Goal 12. Weak Mutation 162: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp Negation of a
   * Goal 13. Weak Mutation 163: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp IINC 1 a
   * Goal 14. Weak Mutation 164: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - InsertUnaryOp IINC -1 a
   * Goal 15. Weak Mutation 167: org.apache.commons.lang.NumberUtils.minimum(III)I:414 - ReplaceComparisonOperator >= -> ==
   * Goal 16. Weak Mutation 174: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - ReplaceVariable c -> b
   * Goal 17. Weak Mutation 175: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp Negation of c
   * Goal 18. Weak Mutation 176: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp IINC 1 c
   * Goal 19. Weak Mutation 177: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp IINC -1 c
   * Goal 20. Weak Mutation 178: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - ReplaceVariable a -> b
   * Goal 21. Weak Mutation 180: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp Negation of a
   * Goal 22. Weak Mutation 181: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp IINC 1 a
   * Goal 23. Weak Mutation 182: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - InsertUnaryOp IINC -1 a
   * Goal 24. Weak Mutation 184: org.apache.commons.lang.NumberUtils.minimum(III)I:417 - ReplaceComparisonOperator >= -> >
   * Goal 25. Weak Mutation 191: org.apache.commons.lang.NumberUtils.minimum(III)I:420 - ReplaceVariable a -> b
   * Goal 26. Weak Mutation 193: org.apache.commons.lang.NumberUtils.minimum(III)I:420 - InsertUnaryOp Negation of a
   * Goal 27. Weak Mutation 194: org.apache.commons.lang.NumberUtils.minimum(III)I:420 - InsertUnaryOp IINC 1 a
   * Goal 28. Weak Mutation 195: org.apache.commons.lang.NumberUtils.minimum(III)I:420 - InsertUnaryOp IINC -1 a
   */

  

  //Test case number: 19
  /*
   * 22 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.maximum(JJJ)J: Line 432
   * Goal 2. org.apache.commons.lang.NumberUtils.maximum(JJJ)J: Line 435
   * Goal 3. org.apache.commons.lang.NumberUtils.maximum(JJJ)J: Line 436
   * Goal 4. org.apache.commons.lang.NumberUtils.maximum(JJJ)J: Line 438
   * Goal 5. org.apache.commons.lang.NumberUtils.maximum(JJJ)J
   * Goal 6. org.apache.commons.lang.NumberUtils.maximum(JJJ)J
   * Goal 7. Weak Mutation 197: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - ReplaceVariable b -> c
   * Goal 8. Weak Mutation 198: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - InsertUnaryOp Negation of b
   * Goal 9. Weak Mutation 200: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - ReplaceVariable a -> c
   * Goal 10. Weak Mutation 201: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - InsertUnaryOp Negation of a
   * Goal 11. Weak Mutation 204: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:432 - ReplaceComparisonOperator <= -> <
   * Goal 12. Weak Mutation 208: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - ReplaceVariable c -> a
   * Goal 13. Weak Mutation 209: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - ReplaceVariable c -> b
   * Goal 14. Weak Mutation 210: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - InsertUnaryOp Negation of c
   * Goal 15. Weak Mutation 212: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - ReplaceVariable a -> c
   * Goal 16. Weak Mutation 213: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - InsertUnaryOp Negation of a
   * Goal 17. Weak Mutation 214: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:435 - ReplaceComparisonOperator <= -> -1
   * Goal 18. Weak Mutation 217: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:436 - ReplaceVariable c -> a
   * Goal 19. Weak Mutation 218: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:436 - ReplaceVariable c -> b
   * Goal 20. Weak Mutation 219: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:436 - InsertUnaryOp Negation of c
   * Goal 21. Weak Mutation 220: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:438 - ReplaceVariable a -> b
   * Goal 22. Weak Mutation 222: org.apache.commons.lang.NumberUtils.maximum(JJJ)J:438 - InsertUnaryOp Negation of a
   */

  

  //Test case number: 20
  /*
   * 34 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 450
   * Goal 2. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 453
   * Goal 3. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 454
   * Goal 4. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 456
   * Goal 5. org.apache.commons.lang.NumberUtils.maximum(III)I
   * Goal 6. org.apache.commons.lang.NumberUtils.maximum(III)I
   * Goal 7. Weak Mutation 224: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - ReplaceVariable b -> c
   * Goal 8. Weak Mutation 225: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp Negation of b
   * Goal 9. Weak Mutation 226: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC 1 b
   * Goal 10. Weak Mutation 227: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC -1 b
   * Goal 11. Weak Mutation 229: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - ReplaceVariable a -> c
   * Goal 12. Weak Mutation 230: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp Negation of a
   * Goal 13. Weak Mutation 231: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC 1 a
   * Goal 14. Weak Mutation 232: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC -1 a
   * Goal 15. Weak Mutation 234: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - ReplaceComparisonOperator <= -> <
   * Goal 16. Weak Mutation 241: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceVariable c -> a
   * Goal 17. Weak Mutation 242: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceVariable c -> b
   * Goal 18. Weak Mutation 243: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp Negation of c
   * Goal 19. Weak Mutation 244: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC 1 c
   * Goal 20. Weak Mutation 245: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC -1 c
   * Goal 21. Weak Mutation 247: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceVariable a -> c
   * Goal 22. Weak Mutation 248: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp Negation of a
   * Goal 23. Weak Mutation 249: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC 1 a
   * Goal 24. Weak Mutation 250: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC -1 a
   * Goal 25. Weak Mutation 251: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceComparisonOperator <= -> -1
   * Goal 26. Weak Mutation 254: org.apache.commons.lang.NumberUtils.maximum(III)I:454 - ReplaceVariable c -> a
   * Goal 27. Weak Mutation 255: org.apache.commons.lang.NumberUtils.maximum(III)I:454 - ReplaceVariable c -> b
   * Goal 28. Weak Mutation 256: org.apache.commons.lang.NumberUtils.maximum(III)I:454 - InsertUnaryOp Negation of c
   * Goal 29. Weak Mutation 257: org.apache.commons.lang.NumberUtils.maximum(III)I:454 - InsertUnaryOp IINC 1 c
   * Goal 30. Weak Mutation 258: org.apache.commons.lang.NumberUtils.maximum(III)I:454 - InsertUnaryOp IINC -1 c
   * Goal 31. Weak Mutation 259: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - ReplaceVariable a -> b
   * Goal 32. Weak Mutation 261: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - InsertUnaryOp Negation of a
   * Goal 33. Weak Mutation 262: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - InsertUnaryOp IINC 1 a
   * Goal 34. Weak Mutation 263: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - InsertUnaryOp IINC -1 a
   */

  

  //Test case number: 21
  /*
   * 35 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 450
   * Goal 2. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 451
   * Goal 3. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 453
   * Goal 4. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 456
   * Goal 5. org.apache.commons.lang.NumberUtils.maximum(III)I
   * Goal 6. org.apache.commons.lang.NumberUtils.maximum(III)I
   * Goal 7. Weak Mutation 223: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - ReplaceVariable b -> a
   * Goal 8. Weak Mutation 224: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - ReplaceVariable b -> c
   * Goal 9. Weak Mutation 225: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp Negation of b
   * Goal 10. Weak Mutation 226: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC 1 b
   * Goal 11. Weak Mutation 227: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC -1 b
   * Goal 12. Weak Mutation 228: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - ReplaceVariable a -> b
   * Goal 13. Weak Mutation 230: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp Negation of a
   * Goal 14. Weak Mutation 231: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC 1 a
   * Goal 15. Weak Mutation 232: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC -1 a
   * Goal 16. Weak Mutation 233: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - ReplaceComparisonOperator <= -> -1
   * Goal 17. Weak Mutation 236: org.apache.commons.lang.NumberUtils.maximum(III)I:451 - ReplaceVariable b -> a
   * Goal 18. Weak Mutation 237: org.apache.commons.lang.NumberUtils.maximum(III)I:451 - ReplaceVariable b -> c
   * Goal 19. Weak Mutation 238: org.apache.commons.lang.NumberUtils.maximum(III)I:451 - InsertUnaryOp Negation of b
   * Goal 20. Weak Mutation 239: org.apache.commons.lang.NumberUtils.maximum(III)I:451 - InsertUnaryOp IINC 1 b
   * Goal 21. Weak Mutation 240: org.apache.commons.lang.NumberUtils.maximum(III)I:451 - InsertUnaryOp IINC -1 b
   * Goal 22. Weak Mutation 241: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceVariable c -> a
   * Goal 23. Weak Mutation 242: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceVariable c -> b
   * Goal 24. Weak Mutation 243: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp Negation of c
   * Goal 25. Weak Mutation 244: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC 1 c
   * Goal 26. Weak Mutation 245: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC -1 c
   * Goal 27. Weak Mutation 247: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceVariable a -> c
   * Goal 28. Weak Mutation 248: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp Negation of a
   * Goal 29. Weak Mutation 249: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC 1 a
   * Goal 30. Weak Mutation 250: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC -1 a
   * Goal 31. Weak Mutation 253: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceComparisonOperator <= -> ==
   * Goal 32. Weak Mutation 260: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - ReplaceVariable a -> c
   * Goal 33. Weak Mutation 261: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - InsertUnaryOp Negation of a
   * Goal 34. Weak Mutation 262: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - InsertUnaryOp IINC 1 a
   * Goal 35. Weak Mutation 263: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - InsertUnaryOp IINC -1 a
   */

  

  //Test case number: 22
  /*
   * 32 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 450
   * Goal 2. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 453
   * Goal 3. org.apache.commons.lang.NumberUtils.maximum(III)I: Line 456
   * Goal 4. org.apache.commons.lang.NumberUtils.maximum(III)I
   * Goal 5. org.apache.commons.lang.NumberUtils.maximum(III)I
   * Goal 6. Weak Mutation 223: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - ReplaceVariable b -> a
   * Goal 7. Weak Mutation 224: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - ReplaceVariable b -> c
   * Goal 8. Weak Mutation 225: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp Negation of b
   * Goal 9. Weak Mutation 226: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC 1 b
   * Goal 10. Weak Mutation 227: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC -1 b
   * Goal 11. Weak Mutation 228: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - ReplaceVariable a -> b
   * Goal 12. Weak Mutation 229: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - ReplaceVariable a -> c
   * Goal 13. Weak Mutation 230: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp Negation of a
   * Goal 14. Weak Mutation 231: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC 1 a
   * Goal 15. Weak Mutation 232: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - InsertUnaryOp IINC -1 a
   * Goal 16. Weak Mutation 235: org.apache.commons.lang.NumberUtils.maximum(III)I:450 - ReplaceComparisonOperator <= -> ==
   * Goal 17. Weak Mutation 241: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceVariable c -> a
   * Goal 18. Weak Mutation 242: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceVariable c -> b
   * Goal 19. Weak Mutation 243: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp Negation of c
   * Goal 20. Weak Mutation 244: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC 1 c
   * Goal 21. Weak Mutation 245: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC -1 c
   * Goal 22. Weak Mutation 246: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceVariable a -> b
   * Goal 23. Weak Mutation 247: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceVariable a -> c
   * Goal 24. Weak Mutation 248: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp Negation of a
   * Goal 25. Weak Mutation 249: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC 1 a
   * Goal 26. Weak Mutation 250: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - InsertUnaryOp IINC -1 a
   * Goal 27. Weak Mutation 253: org.apache.commons.lang.NumberUtils.maximum(III)I:453 - ReplaceComparisonOperator <= -> ==
   * Goal 28. Weak Mutation 259: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - ReplaceVariable a -> b
   * Goal 29. Weak Mutation 260: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - ReplaceVariable a -> c
   * Goal 30. Weak Mutation 261: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - InsertUnaryOp Negation of a
   * Goal 31. Weak Mutation 262: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - InsertUnaryOp IINC 1 a
   * Goal 32. Weak Mutation 263: org.apache.commons.lang.NumberUtils.maximum(III)I:456 - InsertUnaryOp IINC -1 a
   */

  

  //Test case number: 23
  /*
   * 47 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 623
   * Goal 2. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 626
   * Goal 3. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 627
   * Goal 4. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 628
   * Goal 5. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 629
   * Goal 6. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 630
   * Goal 7. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 631
   * Goal 8. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 633
   * Goal 9. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 634
   * Goal 10. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 651
   * Goal 11. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 653
   * Goal 12. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 656
   * Goal 13. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 689
   * Goal 14. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 690
   * Goal 15. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 694
   * Goal 16. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 698
   * Goal 17. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 705
   * Goal 18. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 708
   * Goal 19. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 20. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 21. Weak Mutation 372: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:623 - ReplaceComparisonOperator == -> !=
   * Goal 22. Weak Mutation 374: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:628 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 375: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:629 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 376: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:630 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 377: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:631 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 378: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 379: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 0
   * Goal 28. Weak Mutation 380: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 1
   * Goal 29. Weak Mutation 381: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> -1
   * Goal 30. Weak Mutation 382: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 44
   * Goal 31. Weak Mutation 383: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 46
   * Goal 32. Weak Mutation 385: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceComparisonOperator != -> <
   * Goal 33. Weak Mutation 388: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 389: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable sz -> start
   * Goal 35. Weak Mutation 390: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of sz
   * Goal 36. Weak Mutation 391: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 sz
   * Goal 37. Weak Mutation 392: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 sz
   * Goal 38. Weak Mutation 393: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable start -> sz
   * Goal 39. Weak Mutation 394: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of start
   * Goal 40. Weak Mutation 395: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 start
   * Goal 41. Weak Mutation 396: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 start
   * Goal 42. Weak Mutation 397: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceConstant - 1 -> 0
   * Goal 43. Weak Mutation 398: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> %
   * Goal 44. Weak Mutation 399: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> -
   * Goal 45. Weak Mutation 400: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> *
   * Goal 46. Weak Mutation 401: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> /
   * Goal 47. Weak Mutation 403: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceComparisonOperator <= -> <
   */

  

  //Test case number: 24
  /*
   * 44 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 623
   * Goal 2. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 626
   * Goal 3. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 627
   * Goal 4. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 628
   * Goal 5. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 629
   * Goal 6. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 630
   * Goal 7. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 631
   * Goal 8. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 633
   * Goal 9. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 634
   * Goal 10. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 651
   * Goal 11. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 653
   * Goal 12. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 656
   * Goal 13. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 689
   * Goal 14. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 690
   * Goal 15. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 692
   * Goal 16. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 17. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 18. Weak Mutation 372: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:623 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 374: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:628 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 375: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:629 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 376: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:630 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 377: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:631 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 378: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 379: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 0
   * Goal 25. Weak Mutation 380: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 1
   * Goal 26. Weak Mutation 381: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> -1
   * Goal 27. Weak Mutation 382: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 44
   * Goal 28. Weak Mutation 383: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 46
   * Goal 29. Weak Mutation 385: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceComparisonOperator != -> <
   * Goal 30. Weak Mutation 388: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 389: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable sz -> start
   * Goal 32. Weak Mutation 390: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of sz
   * Goal 33. Weak Mutation 391: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 sz
   * Goal 34. Weak Mutation 392: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 sz
   * Goal 35. Weak Mutation 393: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable start -> sz
   * Goal 36. Weak Mutation 394: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of start
   * Goal 37. Weak Mutation 395: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 start
   * Goal 38. Weak Mutation 396: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 start
   * Goal 39. Weak Mutation 397: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceConstant - 1 -> 0
   * Goal 40. Weak Mutation 398: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> %
   * Goal 41. Weak Mutation 399: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> -
   * Goal 42. Weak Mutation 400: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> *
   * Goal 43. Weak Mutation 401: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> /
   * Goal 44. Weak Mutation 403: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceComparisonOperator <= -> <
   */

  

  //Test case number: 25
  /*
   * 58 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 623
   * Goal 2. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 626
   * Goal 3. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 627
   * Goal 4. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 628
   * Goal 5. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 629
   * Goal 6. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 630
   * Goal 7. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 631
   * Goal 8. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 633
   * Goal 9. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 634
   * Goal 10. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 635
   * Goal 11. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 651
   * Goal 12. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 653
   * Goal 13. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 656
   * Goal 14. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 657
   * Goal 15. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 661
   * Goal 16. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 667
   * Goal 17. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 678
   * Goal 18. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 679
   * Goal 19. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 680
   * Goal 20. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 21. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 22. Weak Mutation 372: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:623 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 374: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:628 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 375: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:629 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 376: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:630 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 377: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:631 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 378: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 379: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 0
   * Goal 29. Weak Mutation 380: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 1
   * Goal 30. Weak Mutation 381: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> -1
   * Goal 31. Weak Mutation 382: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 44
   * Goal 32. Weak Mutation 383: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 46
   * Goal 33. Weak Mutation 384: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceComparisonOperator != -> -1
   * Goal 34. Weak Mutation 387: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 1 -> 0
   * Goal 35. Weak Mutation 389: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable sz -> start
   * Goal 36. Weak Mutation 390: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of sz
   * Goal 37. Weak Mutation 391: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 sz
   * Goal 38. Weak Mutation 392: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 sz
   * Goal 39. Weak Mutation 393: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable start -> sz
   * Goal 40. Weak Mutation 394: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of start
   * Goal 41. Weak Mutation 395: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 start
   * Goal 42. Weak Mutation 396: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 start
   * Goal 43. Weak Mutation 397: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceConstant - 1 -> 0
   * Goal 44. Weak Mutation 398: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> %
   * Goal 45. Weak Mutation 399: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> -
   * Goal 46. Weak Mutation 400: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> *
   * Goal 47. Weak Mutation 401: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> /
   * Goal 48. Weak Mutation 402: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceComparisonOperator <= -> -1
   * Goal 49. Weak Mutation 405: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 50. Weak Mutation 406: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 51. Weak Mutation 407: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 52. Weak Mutation 408: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 53. Weak Mutation 409: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 0
   * Goal 54. Weak Mutation 410: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 1
   * Goal 55. Weak Mutation 411: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> -1
   * Goal 56. Weak Mutation 412: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 47
   * Goal 57. Weak Mutation 413: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 49
   * Goal 58. Weak Mutation 416: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> >
   */

  

  //Test case number: 26
  /*
   * 58 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 623
   * Goal 2. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 626
   * Goal 3. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 627
   * Goal 4. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 628
   * Goal 5. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 629
   * Goal 6. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 630
   * Goal 7. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 631
   * Goal 8. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 633
   * Goal 9. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 634
   * Goal 10. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 635
   * Goal 11. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 651
   * Goal 12. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 653
   * Goal 13. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 656
   * Goal 14. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 657
   * Goal 15. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 661
   * Goal 16. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 667
   * Goal 17. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 669
   * Goal 18. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 673
   * Goal 19. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 674
   * Goal 20. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 21. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 22. Weak Mutation 372: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:623 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 374: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:628 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 375: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:629 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 376: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:630 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 377: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:631 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 378: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 379: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 0
   * Goal 29. Weak Mutation 380: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 1
   * Goal 30. Weak Mutation 381: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> -1
   * Goal 31. Weak Mutation 382: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 44
   * Goal 32. Weak Mutation 383: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 46
   * Goal 33. Weak Mutation 385: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceComparisonOperator != -> <
   * Goal 34. Weak Mutation 388: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 389: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable sz -> start
   * Goal 36. Weak Mutation 390: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of sz
   * Goal 37. Weak Mutation 391: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 sz
   * Goal 38. Weak Mutation 392: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 sz
   * Goal 39. Weak Mutation 393: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable start -> sz
   * Goal 40. Weak Mutation 394: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of start
   * Goal 41. Weak Mutation 395: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 start
   * Goal 42. Weak Mutation 396: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 start
   * Goal 43. Weak Mutation 397: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceConstant - 1 -> 0
   * Goal 44. Weak Mutation 398: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> %
   * Goal 45. Weak Mutation 399: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> -
   * Goal 46. Weak Mutation 400: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> *
   * Goal 47. Weak Mutation 401: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> /
   * Goal 48. Weak Mutation 402: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceComparisonOperator <= -> -1
   * Goal 49. Weak Mutation 405: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 50. Weak Mutation 406: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 51. Weak Mutation 407: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 52. Weak Mutation 408: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 53. Weak Mutation 409: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 0
   * Goal 54. Weak Mutation 410: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 1
   * Goal 55. Weak Mutation 411: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> -1
   * Goal 56. Weak Mutation 412: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 47
   * Goal 57. Weak Mutation 413: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 49
   * Goal 58. Weak Mutation 415: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> <
   */

  

  //Test case number: 27
  /*
   * 58 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 623
   * Goal 2. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 626
   * Goal 3. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 627
   * Goal 4. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 628
   * Goal 5. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 629
   * Goal 6. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 630
   * Goal 7. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 631
   * Goal 8. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 633
   * Goal 9. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 634
   * Goal 10. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 635
   * Goal 11. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 651
   * Goal 12. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 653
   * Goal 13. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 656
   * Goal 14. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 657
   * Goal 15. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 661
   * Goal 16. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 662
   * Goal 17. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 664
   * Goal 18. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 666
   * Goal 19. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 687
   * Goal 20. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 21. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 22. Weak Mutation 372: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:623 - ReplaceComparisonOperator == -> !=
   * Goal 23. Weak Mutation 374: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:628 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 375: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:629 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 376: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:630 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 377: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:631 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 378: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 379: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 0
   * Goal 29. Weak Mutation 380: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 1
   * Goal 30. Weak Mutation 381: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> -1
   * Goal 31. Weak Mutation 382: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 44
   * Goal 32. Weak Mutation 383: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 46
   * Goal 33. Weak Mutation 385: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceComparisonOperator != -> <
   * Goal 34. Weak Mutation 388: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 389: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable sz -> start
   * Goal 36. Weak Mutation 390: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of sz
   * Goal 37. Weak Mutation 391: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 sz
   * Goal 38. Weak Mutation 392: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 sz
   * Goal 39. Weak Mutation 393: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable start -> sz
   * Goal 40. Weak Mutation 394: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of start
   * Goal 41. Weak Mutation 395: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 start
   * Goal 42. Weak Mutation 396: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 start
   * Goal 43. Weak Mutation 397: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceConstant - 1 -> 0
   * Goal 44. Weak Mutation 398: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> %
   * Goal 45. Weak Mutation 399: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> -
   * Goal 46. Weak Mutation 400: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> *
   * Goal 47. Weak Mutation 401: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> /
   * Goal 48. Weak Mutation 402: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceComparisonOperator <= -> -1
   * Goal 49. Weak Mutation 405: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 50. Weak Mutation 406: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 51. Weak Mutation 407: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 52. Weak Mutation 408: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 53. Weak Mutation 409: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 0
   * Goal 54. Weak Mutation 410: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 1
   * Goal 55. Weak Mutation 411: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> -1
   * Goal 56. Weak Mutation 412: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 47
   * Goal 57. Weak Mutation 413: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 49
   * Goal 58. Weak Mutation 416: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> >
   */

  

  //Test case number: 28
  /*
   * 77 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 623
   * Goal 2. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 626
   * Goal 3. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 627
   * Goal 4. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 628
   * Goal 5. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 629
   * Goal 6. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 630
   * Goal 7. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 631
   * Goal 8. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 633
   * Goal 9. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 634
   * Goal 10. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 635
   * Goal 11. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 651
   * Goal 12. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 653
   * Goal 13. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 656
   * Goal 14. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 657
   * Goal 15. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 658
   * Goal 16. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 659
   * Goal 17. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 687
   * Goal 18. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 689
   * Goal 19. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 690
   * Goal 20. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 694
   * Goal 21. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 698
   * Goal 22. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 705
   * Goal 23. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 711
   * Goal 24. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 25. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 26. Weak Mutation 372: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:623 - ReplaceComparisonOperator == -> !=
   * Goal 27. Weak Mutation 374: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:628 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 375: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:629 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 376: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:630 - ReplaceConstant - 0 -> 1
   * Goal 30. Weak Mutation 377: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:631 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 378: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 379: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 0
   * Goal 33. Weak Mutation 380: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 1
   * Goal 34. Weak Mutation 381: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> -1
   * Goal 35. Weak Mutation 382: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 44
   * Goal 36. Weak Mutation 383: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 46
   * Goal 37. Weak Mutation 385: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceComparisonOperator != -> <
   * Goal 38. Weak Mutation 388: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 39. Weak Mutation 389: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable sz -> start
   * Goal 40. Weak Mutation 390: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of sz
   * Goal 41. Weak Mutation 391: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 sz
   * Goal 42. Weak Mutation 392: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 sz
   * Goal 43. Weak Mutation 393: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable start -> sz
   * Goal 44. Weak Mutation 394: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of start
   * Goal 45. Weak Mutation 395: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 start
   * Goal 46. Weak Mutation 396: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 start
   * Goal 47. Weak Mutation 397: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceConstant - 1 -> 0
   * Goal 48. Weak Mutation 398: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> %
   * Goal 49. Weak Mutation 399: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> -
   * Goal 50. Weak Mutation 400: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> *
   * Goal 51. Weak Mutation 401: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> /
   * Goal 52. Weak Mutation 402: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceComparisonOperator <= -> -1
   * Goal 53. Weak Mutation 405: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 54. Weak Mutation 406: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 55. Weak Mutation 407: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 56. Weak Mutation 408: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 57. Weak Mutation 409: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 0
   * Goal 58. Weak Mutation 410: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 1
   * Goal 59. Weak Mutation 411: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> -1
   * Goal 60. Weak Mutation 412: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 47
   * Goal 61. Weak Mutation 413: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 49
   * Goal 62. Weak Mutation 414: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> -1
   * Goal 63. Weak Mutation 417: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 64. Weak Mutation 418: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 65. Weak Mutation 419: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 66. Weak Mutation 420: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 67. Weak Mutation 421: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 1 -> 0
   * Goal 68. Weak Mutation 422: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> %
   * Goal 69. Weak Mutation 423: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> -
   * Goal 70. Weak Mutation 424: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> *
   * Goal 71. Weak Mutation 425: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> /
   * Goal 72. Weak Mutation 426: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 0
   * Goal 73. Weak Mutation 427: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 1
   * Goal 74. Weak Mutation 428: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> -1
   * Goal 75. Weak Mutation 429: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 119
   * Goal 76. Weak Mutation 430: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 121
   * Goal 77. Weak Mutation 432: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> <
   */

  

  //Test case number: 29
  /*
   * 137 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 623
   * Goal 2. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 626
   * Goal 3. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 627
   * Goal 4. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 628
   * Goal 5. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 629
   * Goal 6. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 630
   * Goal 7. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 631
   * Goal 8. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 633
   * Goal 9. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 634
   * Goal 10. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 635
   * Goal 11. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 636
   * Goal 12. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 637
   * Goal 13. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 641
   * Goal 14. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 642
   * Goal 15. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 648
   * Goal 16. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 17. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 18. Weak Mutation 372: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:623 - ReplaceComparisonOperator == -> !=
   * Goal 19. Weak Mutation 374: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:628 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 375: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:629 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 376: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:630 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 377: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:631 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 378: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 379: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 0
   * Goal 25. Weak Mutation 380: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 1
   * Goal 26. Weak Mutation 381: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> -1
   * Goal 27. Weak Mutation 382: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 44
   * Goal 28. Weak Mutation 383: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 46
   * Goal 29. Weak Mutation 385: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceComparisonOperator != -> <
   * Goal 30. Weak Mutation 388: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 389: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable sz -> start
   * Goal 32. Weak Mutation 390: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of sz
   * Goal 33. Weak Mutation 391: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 sz
   * Goal 34. Weak Mutation 392: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 sz
   * Goal 35. Weak Mutation 393: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable start -> sz
   * Goal 36. Weak Mutation 394: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of start
   * Goal 37. Weak Mutation 395: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 start
   * Goal 38. Weak Mutation 396: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 start
   * Goal 39. Weak Mutation 397: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceConstant - 1 -> 0
   * Goal 40. Weak Mutation 398: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> %
   * Goal 41. Weak Mutation 399: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> -
   * Goal 42. Weak Mutation 400: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> *
   * Goal 43. Weak Mutation 401: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> /
   * Goal 44. Weak Mutation 402: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceComparisonOperator <= -> -1
   * Goal 45. Weak Mutation 405: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 46. Weak Mutation 406: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 47. Weak Mutation 407: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 48. Weak Mutation 408: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 49. Weak Mutation 409: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 0
   * Goal 50. Weak Mutation 410: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 1
   * Goal 51. Weak Mutation 411: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> -1
   * Goal 52. Weak Mutation 412: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 47
   * Goal 53. Weak Mutation 413: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 49
   * Goal 54. Weak Mutation 414: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> -1
   * Goal 55. Weak Mutation 417: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 56. Weak Mutation 418: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 57. Weak Mutation 419: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 58. Weak Mutation 420: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 59. Weak Mutation 421: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 1 -> 0
   * Goal 60. Weak Mutation 422: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> %
   * Goal 61. Weak Mutation 423: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> -
   * Goal 62. Weak Mutation 424: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> *
   * Goal 63. Weak Mutation 425: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> /
   * Goal 64. Weak Mutation 426: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 0
   * Goal 65. Weak Mutation 427: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 1
   * Goal 66. Weak Mutation 428: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> -1
   * Goal 67. Weak Mutation 429: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 119
   * Goal 68. Weak Mutation 430: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 121
   * Goal 69. Weak Mutation 431: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> -1
   * Goal 70. Weak Mutation 434: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceVariable start -> sz
   * Goal 71. Weak Mutation 435: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - InsertUnaryOp Negation of start
   * Goal 72. Weak Mutation 436: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - InsertUnaryOp IINC 1 start
   * Goal 73. Weak Mutation 437: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - InsertUnaryOp IINC -1 start
   * Goal 74. Weak Mutation 438: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> 0
   * Goal 75. Weak Mutation 439: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> 1
   * Goal 76. Weak Mutation 440: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> -1
   * Goal 77. Weak Mutation 441: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> 3
   * Goal 78. Weak Mutation 442: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> %
   * Goal 79. Weak Mutation 443: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> -
   * Goal 80. Weak Mutation 444: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> *
   * Goal 81. Weak Mutation 445: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> /
   * Goal 82. Weak Mutation 446: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable i -> start
   * Goal 83. Weak Mutation 447: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable i -> sz
   * Goal 84. Weak Mutation 448: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp Negation of i
   * Goal 85. Weak Mutation 449: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC 1 i
   * Goal 86. Weak Mutation 450: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC -1 i
   * Goal 87. Weak Mutation 451: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable sz -> start
   * Goal 88. Weak Mutation 452: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable sz -> i
   * Goal 89. Weak Mutation 453: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp Negation of sz
   * Goal 90. Weak Mutation 454: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC 1 sz
   * Goal 91. Weak Mutation 455: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC -1 sz
   * Goal 92. Weak Mutation 458: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceComparisonOperator != -> >
   * Goal 93. Weak Mutation 460: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - ReplaceVariable i -> start
   * Goal 94. Weak Mutation 461: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - ReplaceVariable i -> sz
   * Goal 95. Weak Mutation 462: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - InsertUnaryOp Negation of i
   * Goal 96. Weak Mutation 463: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - InsertUnaryOp IINC 1 i
   * Goal 97. Weak Mutation 464: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - InsertUnaryOp IINC -1 i
   * Goal 98. Weak Mutation 465: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - ReplaceComparisonOperator >= -> -1
   * Goal 99. Weak Mutation 466: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:641 - ReplaceComparisonOperator >= -> >
   * Goal 100. Weak Mutation 468: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> start
   * Goal 101. Weak Mutation 469: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> sz
   * Goal 102. Weak Mutation 470: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp Negation of i
   * Goal 103. Weak Mutation 471: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC 1 i
   * Goal 104. Weak Mutation 472: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC -1 i
   * Goal 105. Weak Mutation 473: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> 0
   * Goal 106. Weak Mutation 474: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> 1
   * Goal 107. Weak Mutation 475: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> -1
   * Goal 108. Weak Mutation 476: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> 47
   * Goal 109. Weak Mutation 477: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 48 -> 49
   * Goal 110. Weak Mutation 478: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceComparisonOperator < -> !=
   * Goal 111. Weak Mutation 481: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> start
   * Goal 112. Weak Mutation 482: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> sz
   * Goal 113. Weak Mutation 483: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp Negation of i
   * Goal 114. Weak Mutation 484: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC 1 i
   * Goal 115. Weak Mutation 485: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC -1 i
   * Goal 116. Weak Mutation 486: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 57 -> 0
   * Goal 117. Weak Mutation 487: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 57 -> 1
   * Goal 118. Weak Mutation 488: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 57 -> -1
   * Goal 119. Weak Mutation 489: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 57 -> 56
   * Goal 120. Weak Mutation 490: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 57 -> 58
   * Goal 121. Weak Mutation 491: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceComparisonOperator <= -> -1
   * Goal 122. Weak Mutation 494: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> start
   * Goal 123. Weak Mutation 495: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> sz
   * Goal 124. Weak Mutation 496: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp Negation of i
   * Goal 125. Weak Mutation 497: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC 1 i
   * Goal 126. Weak Mutation 498: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC -1 i
   * Goal 127. Weak Mutation 499: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> 0
   * Goal 128. Weak Mutation 500: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> 1
   * Goal 129. Weak Mutation 501: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> -1
   * Goal 130. Weak Mutation 502: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> 96
   * Goal 131. Weak Mutation 503: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceConstant - 97 -> 98
   * Goal 132. Weak Mutation 505: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceComparisonOperator < -> -2
   * Goal 133. Weak Mutation 520: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> start
   * Goal 134. Weak Mutation 521: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - ReplaceVariable i -> sz
   * Goal 135. Weak Mutation 522: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp Negation of i
   * Goal 136. Weak Mutation 523: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC 1 i
   * Goal 137. Weak Mutation 524: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:642 - InsertUnaryOp IINC -1 i
   */

  

  //Test case number: 30
  /*
   * 89 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 623
   * Goal 2. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 626
   * Goal 3. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 627
   * Goal 4. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 628
   * Goal 5. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 629
   * Goal 6. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 630
   * Goal 7. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 631
   * Goal 8. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 633
   * Goal 9. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 634
   * Goal 10. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 635
   * Goal 11. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 636
   * Goal 12. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 637
   * Goal 13. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 638
   * Goal 14. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 15. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 16. Weak Mutation 372: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:623 - ReplaceComparisonOperator == -> !=
   * Goal 17. Weak Mutation 374: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:628 - ReplaceConstant - 0 -> 1
   * Goal 18. Weak Mutation 375: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:629 - ReplaceConstant - 0 -> 1
   * Goal 19. Weak Mutation 376: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:630 - ReplaceConstant - 0 -> 1
   * Goal 20. Weak Mutation 377: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:631 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 378: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 22. Weak Mutation 379: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 0
   * Goal 23. Weak Mutation 380: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 1
   * Goal 24. Weak Mutation 381: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> -1
   * Goal 25. Weak Mutation 382: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 44
   * Goal 26. Weak Mutation 383: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 46
   * Goal 27. Weak Mutation 385: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceComparisonOperator != -> <
   * Goal 28. Weak Mutation 388: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 29. Weak Mutation 389: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable sz -> start
   * Goal 30. Weak Mutation 390: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of sz
   * Goal 31. Weak Mutation 391: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 sz
   * Goal 32. Weak Mutation 392: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 sz
   * Goal 33. Weak Mutation 393: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable start -> sz
   * Goal 34. Weak Mutation 394: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of start
   * Goal 35. Weak Mutation 395: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 start
   * Goal 36. Weak Mutation 396: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 start
   * Goal 37. Weak Mutation 397: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceConstant - 1 -> 0
   * Goal 38. Weak Mutation 398: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> %
   * Goal 39. Weak Mutation 399: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> -
   * Goal 40. Weak Mutation 400: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> *
   * Goal 41. Weak Mutation 401: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> /
   * Goal 42. Weak Mutation 402: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceComparisonOperator <= -> -1
   * Goal 43. Weak Mutation 405: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 44. Weak Mutation 406: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 45. Weak Mutation 407: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 46. Weak Mutation 408: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 47. Weak Mutation 409: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 0
   * Goal 48. Weak Mutation 410: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 1
   * Goal 49. Weak Mutation 411: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> -1
   * Goal 50. Weak Mutation 412: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 47
   * Goal 51. Weak Mutation 413: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 49
   * Goal 52. Weak Mutation 414: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> -1
   * Goal 53. Weak Mutation 417: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 54. Weak Mutation 418: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 55. Weak Mutation 419: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 56. Weak Mutation 420: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 57. Weak Mutation 421: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 1 -> 0
   * Goal 58. Weak Mutation 422: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> %
   * Goal 59. Weak Mutation 423: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> -
   * Goal 60. Weak Mutation 424: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> *
   * Goal 61. Weak Mutation 425: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceArithmeticOperator + -> /
   * Goal 62. Weak Mutation 426: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 0
   * Goal 63. Weak Mutation 427: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 1
   * Goal 64. Weak Mutation 428: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> -1
   * Goal 65. Weak Mutation 429: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 119
   * Goal 66. Weak Mutation 430: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 120 -> 121
   * Goal 67. Weak Mutation 431: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> -1
   * Goal 68. Weak Mutation 434: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceVariable start -> sz
   * Goal 69. Weak Mutation 435: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - InsertUnaryOp Negation of start
   * Goal 70. Weak Mutation 436: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - InsertUnaryOp IINC 1 start
   * Goal 71. Weak Mutation 437: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - InsertUnaryOp IINC -1 start
   * Goal 72. Weak Mutation 438: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> 0
   * Goal 73. Weak Mutation 439: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> 1
   * Goal 74. Weak Mutation 440: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> -1
   * Goal 75. Weak Mutation 441: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceConstant - 2 -> 3
   * Goal 76. Weak Mutation 442: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> %
   * Goal 77. Weak Mutation 443: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> -
   * Goal 78. Weak Mutation 444: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> *
   * Goal 79. Weak Mutation 445: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:636 - ReplaceArithmeticOperator + -> /
   * Goal 80. Weak Mutation 446: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable i -> start
   * Goal 81. Weak Mutation 448: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp Negation of i
   * Goal 82. Weak Mutation 449: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC 1 i
   * Goal 83. Weak Mutation 450: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC -1 i
   * Goal 84. Weak Mutation 451: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceVariable sz -> start
   * Goal 85. Weak Mutation 453: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp Negation of sz
   * Goal 86. Weak Mutation 454: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC 1 sz
   * Goal 87. Weak Mutation 455: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - InsertUnaryOp IINC -1 sz
   * Goal 88. Weak Mutation 456: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:637 - ReplaceComparisonOperator != -> -1
   * Goal 89. Weak Mutation 459: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:638 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 31
  /*
   * 6 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 623
   * Goal 2. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 624
   * Goal 3. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 4. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 5. Weak Mutation 372: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:623 - ReplaceComparisonOperator == -> !=
   * Goal 6. Weak Mutation 373: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:624 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 32
  /*
   * 57 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 623
   * Goal 2. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 626
   * Goal 3. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 627
   * Goal 4. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 628
   * Goal 5. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 629
   * Goal 6. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 630
   * Goal 7. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 631
   * Goal 8. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 633
   * Goal 9. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 634
   * Goal 10. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 635
   * Goal 11. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 651
   * Goal 12. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 653
   * Goal 13. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 656
   * Goal 14. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 657
   * Goal 15. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 661
   * Goal 16. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 667
   * Goal 17. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 678
   * Goal 18. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z: Line 685
   * Goal 19. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 20. org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z
   * Goal 21. Weak Mutation 372: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:623 - ReplaceComparisonOperator == -> !=
   * Goal 22. Weak Mutation 374: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:628 - ReplaceConstant - 0 -> 1
   * Goal 23. Weak Mutation 375: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:629 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 376: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:630 - ReplaceConstant - 0 -> 1
   * Goal 25. Weak Mutation 377: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:631 - ReplaceConstant - 0 -> 1
   * Goal 26. Weak Mutation 378: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 27. Weak Mutation 379: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 0
   * Goal 28. Weak Mutation 380: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 1
   * Goal 29. Weak Mutation 381: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> -1
   * Goal 30. Weak Mutation 382: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 44
   * Goal 31. Weak Mutation 383: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 45 -> 46
   * Goal 32. Weak Mutation 386: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceComparisonOperator != -> >
   * Goal 33. Weak Mutation 388: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:633 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 389: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable sz -> start
   * Goal 35. Weak Mutation 390: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of sz
   * Goal 36. Weak Mutation 391: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 sz
   * Goal 37. Weak Mutation 392: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 sz
   * Goal 38. Weak Mutation 393: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceVariable start -> sz
   * Goal 39. Weak Mutation 394: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp Negation of start
   * Goal 40. Weak Mutation 395: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC 1 start
   * Goal 41. Weak Mutation 396: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - InsertUnaryOp IINC -1 start
   * Goal 42. Weak Mutation 397: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceConstant - 1 -> 0
   * Goal 43. Weak Mutation 398: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> %
   * Goal 44. Weak Mutation 399: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> -
   * Goal 45. Weak Mutation 400: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> *
   * Goal 46. Weak Mutation 401: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceArithmeticOperator + -> /
   * Goal 47. Weak Mutation 402: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:634 - ReplaceComparisonOperator <= -> -1
   * Goal 48. Weak Mutation 405: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceVariable start -> sz
   * Goal 49. Weak Mutation 406: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp Negation of start
   * Goal 50. Weak Mutation 407: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC 1 start
   * Goal 51. Weak Mutation 408: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - InsertUnaryOp IINC -1 start
   * Goal 52. Weak Mutation 409: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 0
   * Goal 53. Weak Mutation 410: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 1
   * Goal 54. Weak Mutation 411: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> -1
   * Goal 55. Weak Mutation 412: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 47
   * Goal 56. Weak Mutation 413: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceConstant - 48 -> 49
   * Goal 57. Weak Mutation 416: org.apache.commons.lang.NumberUtils.isNumber(Ljava/lang/String;)Z:635 - ReplaceComparisonOperator != -> >
   */

  

  //Test case number: 33
  /*
   * 19 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 598
   * Goal 2. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 601
   * Goal 3. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 602
   * Goal 4. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 606
   * Goal 5. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 6. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 7. Weak Mutation 354: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:598 - ReplaceComparisonOperator = null -> != null
   * Goal 8. Weak Mutation 356: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:598 - ReplaceComparisonOperator != -> <
   * Goal 9. Weak Mutation 359: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:601 - ReplaceConstant - 0 -> 1
   * Goal 10. Weak Mutation 360: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:601 - InsertUnaryOp Negation of i
   * Goal 11. Weak Mutation 361: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:601 - InsertUnaryOp IINC 1 i
   * Goal 12. Weak Mutation 362: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:601 - InsertUnaryOp IINC -1 i
   * Goal 13. Weak Mutation 363: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:601 - ReplaceComparisonOperator >= -> -1
   * Goal 14. Weak Mutation 364: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:601 - ReplaceComparisonOperator >= -> >
   * Goal 15. Weak Mutation 366: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:602 - InsertUnaryOp Negation of i
   * Goal 16. Weak Mutation 367: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:602 - InsertUnaryOp IINC 1 i
   * Goal 17. Weak Mutation 368: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:602 - InsertUnaryOp IINC -1 i
   * Goal 18. Weak Mutation 369: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:602 - ReplaceComparisonOperator != -> ==
   * Goal 19. Weak Mutation 371: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:606 - ReplaceConstant - 1 -> 0
   */

  

  //Test case number: 34
  /*
   * 7 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 598
   * Goal 2. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 599
   * Goal 3. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 4. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z
   * Goal 5. Weak Mutation 354: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:598 - ReplaceComparisonOperator = null -> != null
   * Goal 6. Weak Mutation 355: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:598 - ReplaceComparisonOperator != -> -1
   * Goal 7. Weak Mutation 358: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:599 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 35
  /*
   * 98 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 2. org.apache.commons.lang.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 381
   * Goal 3. org.apache.commons.lang.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 334
   * Goal 4. org.apache.commons.lang.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 323
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 6. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 7. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 145
   * Goal 8. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 152
   * Goal 9. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 155
   * Goal 10. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 159
   * Goal 11. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 160
   * Goal 12. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 162
   * Goal 13. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 174
   * Goal 14. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 175
   * Goal 15. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 179
   * Goal 16. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 181
   * Goal 17. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 247
   * Goal 18. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 248
   * Goal 19. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 252
   * Goal 20. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 268
   * Goal 21. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 270
   * Goal 22. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 274
   * Goal 23. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 278
   * Goal 24. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 282
   * Goal 25. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 286
   * Goal 26. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 302
   * Goal 27. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 305
   * Goal 28. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 306
   * Goal 29. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 307
   * Goal 30. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 32. Weak Mutation 6: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> <
   * Goal 33. Weak Mutation 9: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - -- -> 
   * Goal 34. Weak Mutation 10: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 12: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceComparisonOperator <= -> ==
   * Goal 36. Weak Mutation 14: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0x -> 
   * Goal 37. Weak Mutation 15: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 17: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator > -> !=
   * Goal 39. Weak Mutation 19: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - -0x -> 
   * Goal 40. Weak Mutation 20: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 22: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator <= -> ==
   * Goal 42. Weak Mutation 24: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceConstant - 1 -> 0
   * Goal 43. Weak Mutation 25: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> +
   * Goal 44. Weak Mutation 26: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> %
   * Goal 45. Weak Mutation 27: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> *
   * Goal 46. Weak Mutation 28: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> /
   * Goal 47. Weak Mutation 29: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 0
   * Goal 48. Weak Mutation 30: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 1
   * Goal 49. Weak Mutation 31: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> -1
   * Goal 50. Weak Mutation 32: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 45
   * Goal 51. Weak Mutation 33: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 47
   * Goal 52. Weak Mutation 34: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 0
   * Goal 53. Weak Mutation 35: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 1
   * Goal 54. Weak Mutation 36: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> -1
   * Goal 55. Weak Mutation 37: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 100
   * Goal 56. Weak Mutation 38: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 102
   * Goal 57. Weak Mutation 39: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 0
   * Goal 58. Weak Mutation 40: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 1
   * Goal 59. Weak Mutation 41: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> -1
   * Goal 60. Weak Mutation 42: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 68
   * Goal 61. Weak Mutation 43: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 70
   * Goal 62. Weak Mutation 44: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 63. Weak Mutation 45: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 64. Weak Mutation 46: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 65. Weak Mutation 47: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 66. Weak Mutation 48: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 1 -> 0
   * Goal 67. Weak Mutation 49: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 68. Weak Mutation 50: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 69. Weak Mutation 51: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 70. Weak Mutation 52: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 71. Weak Mutation 53: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceVariable decPos -> expPos
   * Goal 72. Weak Mutation 54: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp Negation of decPos
   * Goal 73. Weak Mutation 55: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC 1 decPos
   * Goal 74. Weak Mutation 56: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC -1 decPos
   * Goal 75. Weak Mutation 57: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 0
   * Goal 76. Weak Mutation 58: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 1
   * Goal 77. Weak Mutation 59: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> -2
   * Goal 78. Weak Mutation 61: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceComparisonOperator <= -> <
   * Goal 79. Weak Mutation 98: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:302 - ReplaceComparisonOperator != null -> = null
   * Goal 80. Weak Mutation 100: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceConstant - 1 -> 0
   * Goal 81. Weak Mutation 101: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> +
   * Goal 82. Weak Mutation 102: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> %
   * Goal 83. Weak Mutation 103: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> *
   * Goal 84. Weak Mutation 104: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> /
   * Goal 85. Weak Mutation 105: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp Negation of i
   * Goal 86. Weak Mutation 106: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC 1 i
   * Goal 87. Weak Mutation 107: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC -1 i
   * Goal 88. Weak Mutation 109: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceComparisonOperator < -> !=
   * Goal 89. Weak Mutation 111: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp Negation of i
   * Goal 90. Weak Mutation 112: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC 1 i
   * Goal 91. Weak Mutation 113: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC -1 i
   * Goal 92. Weak Mutation 114: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 0
   * Goal 93. Weak Mutation 115: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 1
   * Goal 94. Weak Mutation 116: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> -1
   * Goal 95. Weak Mutation 117: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 47
   * Goal 96. Weak Mutation 118: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 49
   * Goal 97. Weak Mutation 120: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceComparisonOperator == -> >=
   * Goal 98. Weak Mutation 122: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:307 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 36
  /*
   * 100 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 2. org.apache.commons.lang.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 381
   * Goal 3. org.apache.commons.lang.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 334
   * Goal 4. org.apache.commons.lang.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 323
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 6. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 7. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 145
   * Goal 8. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 152
   * Goal 9. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 155
   * Goal 10. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 159
   * Goal 11. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 160
   * Goal 12. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 162
   * Goal 13. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 174
   * Goal 14. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 177
   * Goal 15. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 179
   * Goal 16. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 181
   * Goal 17. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 182
   * Goal 18. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 185
   * Goal 19. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 188
   * Goal 20. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 189
   * Goal 21. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 190
   * Goal 22. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 213
   * Goal 23. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 220
   * Goal 24. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 227
   * Goal 25. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 231
   * Goal 26. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 235
   * Goal 27. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 236
   * Goal 28. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 241
   * Goal 29. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 302
   * Goal 30. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 305
   * Goal 31. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 306
   * Goal 32. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 307
   * Goal 33. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 34. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 35. Weak Mutation 6: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> <
   * Goal 36. Weak Mutation 9: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - -- -> 
   * Goal 37. Weak Mutation 10: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 12: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceComparisonOperator <= -> ==
   * Goal 39. Weak Mutation 14: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0x -> 
   * Goal 40. Weak Mutation 15: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 17: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator > -> !=
   * Goal 42. Weak Mutation 19: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - -0x -> 
   * Goal 43. Weak Mutation 20: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 44. Weak Mutation 22: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator <= -> ==
   * Goal 45. Weak Mutation 24: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceConstant - 1 -> 0
   * Goal 46. Weak Mutation 25: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> +
   * Goal 47. Weak Mutation 26: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> %
   * Goal 48. Weak Mutation 27: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> *
   * Goal 49. Weak Mutation 28: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> /
   * Goal 50. Weak Mutation 29: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 0
   * Goal 51. Weak Mutation 30: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 1
   * Goal 52. Weak Mutation 31: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> -1
   * Goal 53. Weak Mutation 32: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 45
   * Goal 54. Weak Mutation 33: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 47
   * Goal 55. Weak Mutation 34: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 0
   * Goal 56. Weak Mutation 35: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 1
   * Goal 57. Weak Mutation 36: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> -1
   * Goal 58. Weak Mutation 37: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 100
   * Goal 59. Weak Mutation 38: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 102
   * Goal 60. Weak Mutation 39: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 0
   * Goal 61. Weak Mutation 40: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 1
   * Goal 62. Weak Mutation 41: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> -1
   * Goal 63. Weak Mutation 42: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 68
   * Goal 64. Weak Mutation 43: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 70
   * Goal 65. Weak Mutation 44: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 66. Weak Mutation 45: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 67. Weak Mutation 46: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 68. Weak Mutation 47: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 69. Weak Mutation 48: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 1 -> 0
   * Goal 70. Weak Mutation 49: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 71. Weak Mutation 50: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 72. Weak Mutation 51: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 73. Weak Mutation 52: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 74. Weak Mutation 54: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp Negation of decPos
   * Goal 75. Weak Mutation 55: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC 1 decPos
   * Goal 76. Weak Mutation 56: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC -1 decPos
   * Goal 77. Weak Mutation 57: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 0
   * Goal 78. Weak Mutation 58: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 1
   * Goal 79. Weak Mutation 59: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> -2
   * Goal 80. Weak Mutation 61: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceComparisonOperator <= -> <
   * Goal 81. Weak Mutation 98: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:302 - ReplaceComparisonOperator != null -> = null
   * Goal 82. Weak Mutation 100: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceConstant - 1 -> 0
   * Goal 83. Weak Mutation 101: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> +
   * Goal 84. Weak Mutation 102: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> %
   * Goal 85. Weak Mutation 103: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> *
   * Goal 86. Weak Mutation 104: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> /
   * Goal 87. Weak Mutation 105: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp Negation of i
   * Goal 88. Weak Mutation 106: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC 1 i
   * Goal 89. Weak Mutation 107: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC -1 i
   * Goal 90. Weak Mutation 109: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceComparisonOperator < -> !=
   * Goal 91. Weak Mutation 111: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp Negation of i
   * Goal 92. Weak Mutation 112: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC 1 i
   * Goal 93. Weak Mutation 113: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC -1 i
   * Goal 94. Weak Mutation 114: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 0
   * Goal 95. Weak Mutation 115: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 1
   * Goal 96. Weak Mutation 116: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> -1
   * Goal 97. Weak Mutation 117: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 47
   * Goal 98. Weak Mutation 118: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 49
   * Goal 99. Weak Mutation 120: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceComparisonOperator == -> >=
   * Goal 100. Weak Mutation 122: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:307 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 37
  /*
   * 111 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 2. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 3. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 4. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 145
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 152
   * Goal 6. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 155
   * Goal 7. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 159
   * Goal 8. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 160
   * Goal 9. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 162
   * Goal 10. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 174
   * Goal 11. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 177
   * Goal 12. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 179
   * Goal 13. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 181
   * Goal 14. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 182
   * Goal 15. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 185
   * Goal 16. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 188
   * Goal 17. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 189
   * Goal 18. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 190
   * Goal 19. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 193
   * Goal 20. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 196
   * Goal 21. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 197
   * Goal 22. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 199
   * Goal 23. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 209
   * Goal 24. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 302
   * Goal 25. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 305
   * Goal 26. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 306
   * Goal 27. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 307
   * Goal 28. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 598
   * Goal 29. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 601
   * Goal 30. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 602
   * Goal 31. org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z: Line 603
   * Goal 32. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 33. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 34. Weak Mutation 6: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> <
   * Goal 35. Weak Mutation 9: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - -- -> 
   * Goal 36. Weak Mutation 10: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - 0 -> 1
   * Goal 37. Weak Mutation 12: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceComparisonOperator <= -> ==
   * Goal 38. Weak Mutation 14: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0x -> 
   * Goal 39. Weak Mutation 15: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 40. Weak Mutation 17: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator > -> !=
   * Goal 41. Weak Mutation 19: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - -0x -> 
   * Goal 42. Weak Mutation 20: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 43. Weak Mutation 22: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator <= -> ==
   * Goal 44. Weak Mutation 24: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceConstant - 1 -> 0
   * Goal 45. Weak Mutation 25: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> +
   * Goal 46. Weak Mutation 26: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> %
   * Goal 47. Weak Mutation 27: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> *
   * Goal 48. Weak Mutation 28: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> /
   * Goal 49. Weak Mutation 29: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 0
   * Goal 50. Weak Mutation 30: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 1
   * Goal 51. Weak Mutation 31: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> -1
   * Goal 52. Weak Mutation 32: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 45
   * Goal 53. Weak Mutation 33: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 47
   * Goal 54. Weak Mutation 34: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 0
   * Goal 55. Weak Mutation 35: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 1
   * Goal 56. Weak Mutation 36: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> -1
   * Goal 57. Weak Mutation 37: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 100
   * Goal 58. Weak Mutation 38: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 102
   * Goal 59. Weak Mutation 39: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 0
   * Goal 60. Weak Mutation 40: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 1
   * Goal 61. Weak Mutation 41: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> -1
   * Goal 62. Weak Mutation 42: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 68
   * Goal 63. Weak Mutation 43: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 70
   * Goal 64. Weak Mutation 44: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 65. Weak Mutation 45: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 66. Weak Mutation 46: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 67. Weak Mutation 47: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 68. Weak Mutation 48: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 1 -> 0
   * Goal 69. Weak Mutation 49: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 70. Weak Mutation 50: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 71. Weak Mutation 51: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 72. Weak Mutation 52: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 73. Weak Mutation 54: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp Negation of decPos
   * Goal 74. Weak Mutation 55: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC 1 decPos
   * Goal 75. Weak Mutation 56: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC -1 decPos
   * Goal 76. Weak Mutation 57: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 0
   * Goal 77. Weak Mutation 58: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 1
   * Goal 78. Weak Mutation 59: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> -2
   * Goal 79. Weak Mutation 61: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceComparisonOperator <= -> <
   * Goal 80. Weak Mutation 98: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:302 - ReplaceComparisonOperator != null -> = null
   * Goal 81. Weak Mutation 100: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceConstant - 1 -> 0
   * Goal 82. Weak Mutation 101: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> +
   * Goal 83. Weak Mutation 102: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> %
   * Goal 84. Weak Mutation 103: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> *
   * Goal 85. Weak Mutation 104: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> /
   * Goal 86. Weak Mutation 105: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp Negation of i
   * Goal 87. Weak Mutation 106: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC 1 i
   * Goal 88. Weak Mutation 107: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC -1 i
   * Goal 89. Weak Mutation 109: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceComparisonOperator < -> !=
   * Goal 90. Weak Mutation 111: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp Negation of i
   * Goal 91. Weak Mutation 112: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC 1 i
   * Goal 92. Weak Mutation 113: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC -1 i
   * Goal 93. Weak Mutation 114: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 0
   * Goal 94. Weak Mutation 115: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 1
   * Goal 95. Weak Mutation 116: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> -1
   * Goal 96. Weak Mutation 117: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 47
   * Goal 97. Weak Mutation 118: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 49
   * Goal 98. Weak Mutation 120: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceComparisonOperator == -> >=
   * Goal 99. Weak Mutation 122: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:307 - ReplaceConstant - 0 -> 1
   * Goal 100. Weak Mutation 354: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:598 - ReplaceComparisonOperator = null -> != null
   * Goal 101. Weak Mutation 356: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:598 - ReplaceComparisonOperator != -> <
   * Goal 102. Weak Mutation 359: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:601 - ReplaceConstant - 0 -> 1
   * Goal 103. Weak Mutation 360: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:601 - InsertUnaryOp Negation of i
   * Goal 104. Weak Mutation 361: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:601 - InsertUnaryOp IINC 1 i
   * Goal 105. Weak Mutation 362: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:601 - InsertUnaryOp IINC -1 i
   * Goal 106. Weak Mutation 363: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:601 - ReplaceComparisonOperator >= -> -1
   * Goal 107. Weak Mutation 366: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:602 - InsertUnaryOp Negation of i
   * Goal 108. Weak Mutation 367: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:602 - InsertUnaryOp IINC 1 i
   * Goal 109. Weak Mutation 368: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:602 - InsertUnaryOp IINC -1 i
   * Goal 110. Weak Mutation 369: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:602 - ReplaceComparisonOperator != -> ==
   * Goal 111. Weak Mutation 370: org.apache.commons.lang.NumberUtils.isDigits(Ljava/lang/String;)Z:603 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 38
  /*
   * 99 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 2. org.apache.commons.lang.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 381
   * Goal 3. org.apache.commons.lang.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 334
   * Goal 4. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 6. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 145
   * Goal 7. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 152
   * Goal 8. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 155
   * Goal 9. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 159
   * Goal 10. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 160
   * Goal 11. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 162
   * Goal 12. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 174
   * Goal 13. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 175
   * Goal 14. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 179
   * Goal 15. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 181
   * Goal 16. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 182
   * Goal 17. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 183
   * Goal 18. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 188
   * Goal 19. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 189
   * Goal 20. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 190
   * Goal 21. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 227
   * Goal 22. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 231
   * Goal 23. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 235
   * Goal 24. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 236
   * Goal 25. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 241
   * Goal 26. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 302
   * Goal 27. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 305
   * Goal 28. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 306
   * Goal 29. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 307
   * Goal 30. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 31. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 32. Weak Mutation 6: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> <
   * Goal 33. Weak Mutation 9: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - -- -> 
   * Goal 34. Weak Mutation 10: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 12: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceComparisonOperator <= -> ==
   * Goal 36. Weak Mutation 14: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0x -> 
   * Goal 37. Weak Mutation 15: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 17: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator > -> !=
   * Goal 39. Weak Mutation 19: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - -0x -> 
   * Goal 40. Weak Mutation 20: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 41. Weak Mutation 22: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator <= -> ==
   * Goal 42. Weak Mutation 24: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceConstant - 1 -> 0
   * Goal 43. Weak Mutation 25: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> +
   * Goal 44. Weak Mutation 26: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> %
   * Goal 45. Weak Mutation 27: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> *
   * Goal 46. Weak Mutation 28: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> /
   * Goal 47. Weak Mutation 29: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 0
   * Goal 48. Weak Mutation 30: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 1
   * Goal 49. Weak Mutation 31: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> -1
   * Goal 50. Weak Mutation 32: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 45
   * Goal 51. Weak Mutation 33: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 47
   * Goal 52. Weak Mutation 34: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 0
   * Goal 53. Weak Mutation 35: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 1
   * Goal 54. Weak Mutation 36: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> -1
   * Goal 55. Weak Mutation 37: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 100
   * Goal 56. Weak Mutation 38: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 102
   * Goal 57. Weak Mutation 39: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 0
   * Goal 58. Weak Mutation 40: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 1
   * Goal 59. Weak Mutation 41: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> -1
   * Goal 60. Weak Mutation 42: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 68
   * Goal 61. Weak Mutation 43: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 70
   * Goal 62. Weak Mutation 44: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 63. Weak Mutation 45: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 64. Weak Mutation 46: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 65. Weak Mutation 47: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 66. Weak Mutation 48: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 1 -> 0
   * Goal 67. Weak Mutation 49: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 68. Weak Mutation 50: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 69. Weak Mutation 51: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 70. Weak Mutation 52: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 71. Weak Mutation 53: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceVariable decPos -> expPos
   * Goal 72. Weak Mutation 54: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp Negation of decPos
   * Goal 73. Weak Mutation 55: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC 1 decPos
   * Goal 74. Weak Mutation 56: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC -1 decPos
   * Goal 75. Weak Mutation 57: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 0
   * Goal 76. Weak Mutation 58: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 1
   * Goal 77. Weak Mutation 59: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> -2
   * Goal 78. Weak Mutation 61: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceComparisonOperator <= -> <
   * Goal 79. Weak Mutation 98: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:302 - ReplaceComparisonOperator != null -> = null
   * Goal 80. Weak Mutation 100: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceConstant - 1 -> 0
   * Goal 81. Weak Mutation 101: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> +
   * Goal 82. Weak Mutation 102: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> %
   * Goal 83. Weak Mutation 103: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> *
   * Goal 84. Weak Mutation 104: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> /
   * Goal 85. Weak Mutation 105: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp Negation of i
   * Goal 86. Weak Mutation 106: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC 1 i
   * Goal 87. Weak Mutation 107: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC -1 i
   * Goal 88. Weak Mutation 109: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceComparisonOperator < -> !=
   * Goal 89. Weak Mutation 111: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp Negation of i
   * Goal 90. Weak Mutation 112: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC 1 i
   * Goal 91. Weak Mutation 113: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC -1 i
   * Goal 92. Weak Mutation 114: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 0
   * Goal 93. Weak Mutation 115: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 1
   * Goal 94. Weak Mutation 116: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> -1
   * Goal 95. Weak Mutation 117: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 47
   * Goal 96. Weak Mutation 118: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 49
   * Goal 97. Weak Mutation 119: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceComparisonOperator == -> -2
   * Goal 98. Weak Mutation 120: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceComparisonOperator == -> >=
   * Goal 99. Weak Mutation 122: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:307 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 39
  /*
   * 92 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 2. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 3. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 4. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 145
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 152
   * Goal 6. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 155
   * Goal 7. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 159
   * Goal 8. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 160
   * Goal 9. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 162
   * Goal 10. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 174
   * Goal 11. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 177
   * Goal 12. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 179
   * Goal 13. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 181
   * Goal 14. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 182
   * Goal 15. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 185
   * Goal 16. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 188
   * Goal 17. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 189
   * Goal 18. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 190
   * Goal 19. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 193
   * Goal 20. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 194
   * Goal 21. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 196
   * Goal 22. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 209
   * Goal 23. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 302
   * Goal 24. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 305
   * Goal 25. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 306
   * Goal 26. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 307
   * Goal 27. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 28. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 29. Weak Mutation 6: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> <
   * Goal 30. Weak Mutation 9: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - -- -> 
   * Goal 31. Weak Mutation 10: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - 0 -> 1
   * Goal 32. Weak Mutation 12: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceComparisonOperator <= -> ==
   * Goal 33. Weak Mutation 14: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0x -> 
   * Goal 34. Weak Mutation 15: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 35. Weak Mutation 17: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator > -> !=
   * Goal 36. Weak Mutation 19: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - -0x -> 
   * Goal 37. Weak Mutation 20: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 38. Weak Mutation 22: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator <= -> ==
   * Goal 39. Weak Mutation 24: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceConstant - 1 -> 0
   * Goal 40. Weak Mutation 25: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> +
   * Goal 41. Weak Mutation 27: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> *
   * Goal 42. Weak Mutation 28: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> /
   * Goal 43. Weak Mutation 29: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 0
   * Goal 44. Weak Mutation 30: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 1
   * Goal 45. Weak Mutation 31: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> -1
   * Goal 46. Weak Mutation 32: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 45
   * Goal 47. Weak Mutation 33: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 47
   * Goal 48. Weak Mutation 34: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 0
   * Goal 49. Weak Mutation 35: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 1
   * Goal 50. Weak Mutation 36: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> -1
   * Goal 51. Weak Mutation 37: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 100
   * Goal 52. Weak Mutation 38: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 102
   * Goal 53. Weak Mutation 39: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 0
   * Goal 54. Weak Mutation 40: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 1
   * Goal 55. Weak Mutation 41: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> -1
   * Goal 56. Weak Mutation 42: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 68
   * Goal 57. Weak Mutation 43: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 70
   * Goal 58. Weak Mutation 44: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 59. Weak Mutation 45: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 60. Weak Mutation 46: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 61. Weak Mutation 47: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 62. Weak Mutation 48: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 1 -> 0
   * Goal 63. Weak Mutation 49: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 64. Weak Mutation 50: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 65. Weak Mutation 51: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 66. Weak Mutation 52: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 67. Weak Mutation 54: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp Negation of decPos
   * Goal 68. Weak Mutation 55: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC 1 decPos
   * Goal 69. Weak Mutation 56: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC -1 decPos
   * Goal 70. Weak Mutation 57: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 0
   * Goal 71. Weak Mutation 58: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 1
   * Goal 72. Weak Mutation 59: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> -2
   * Goal 73. Weak Mutation 61: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceComparisonOperator <= -> <
   * Goal 74. Weak Mutation 98: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:302 - ReplaceComparisonOperator != null -> = null
   * Goal 75. Weak Mutation 100: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceConstant - 1 -> 0
   * Goal 76. Weak Mutation 101: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> +
   * Goal 77. Weak Mutation 103: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> *
   * Goal 78. Weak Mutation 104: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> /
   * Goal 79. Weak Mutation 105: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp Negation of i
   * Goal 80. Weak Mutation 106: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC 1 i
   * Goal 81. Weak Mutation 107: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC -1 i
   * Goal 82. Weak Mutation 110: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceComparisonOperator < -> <=
   * Goal 83. Weak Mutation 111: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp Negation of i
   * Goal 84. Weak Mutation 112: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC 1 i
   * Goal 85. Weak Mutation 113: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - InsertUnaryOp IINC -1 i
   * Goal 86. Weak Mutation 114: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 0
   * Goal 87. Weak Mutation 115: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 1
   * Goal 88. Weak Mutation 116: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> -1
   * Goal 89. Weak Mutation 117: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 47
   * Goal 90. Weak Mutation 118: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceConstant - 48 -> 49
   * Goal 91. Weak Mutation 120: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:306 - ReplaceComparisonOperator == -> >=
   * Goal 92. Weak Mutation 122: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:307 - ReplaceConstant - 0 -> 1
   */

  @Test public void test39()  throws Throwable  {
	Object target_obj_7au3e = null;
	boolean not_thrown = false;
	try {
		NumberUtils.clearORefMap();
		try {
			NumberUtils.createNumber("l");
		} catch (NumberFormatException e) {
			assertThrownBy("org.apache.commons.lang.NumberUtils", e);
		}
		not_thrown = true;
		fail();
	} catch (Throwable t) {
		if (not_thrown) {
			fail("Throwable Expected!");
		} else {
			List obj_list_7au3e = (List) NumberUtils.oref_map
					.get("createNumber(String)0");
			target_obj_7au3e = obj_list_7au3e.get(0);
			assertEquals(
					"(E)0,(C)org.apache.commons.lang.NumberUtils,(MSIG)createNumber(String)0,(I)0",
					"java.lang.NumberFormatException: l is not a valid number.",
					((Throwable) target_obj_7au3e).toString());
		}
	}
}

  //Test case number: 40
  /*
   * 91 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 2. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 3. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 4. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 145
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 152
   * Goal 6. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 155
   * Goal 7. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 159
   * Goal 8. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 160
   * Goal 9. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 162
   * Goal 10. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 164
   * Goal 11. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 170
   * Goal 12. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 172
   * Goal 13. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 181
   * Goal 14. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 182
   * Goal 15. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 185
   * Goal 16. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 188
   * Goal 17. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 189
   * Goal 18. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 190
   * Goal 19. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 241
   * Goal 20. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 302
   * Goal 21. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 305
   * Goal 22. org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z: Line 310
   * Goal 23. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 24. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 25. Weak Mutation 6: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> <
   * Goal 26. Weak Mutation 9: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - -- -> 
   * Goal 27. Weak Mutation 10: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - 0 -> 1
   * Goal 28. Weak Mutation 12: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceComparisonOperator <= -> ==
   * Goal 29. Weak Mutation 14: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0x -> 
   * Goal 30. Weak Mutation 15: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 31. Weak Mutation 17: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator > -> !=
   * Goal 32. Weak Mutation 19: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - -0x -> 
   * Goal 33. Weak Mutation 20: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 34. Weak Mutation 22: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator <= -> ==
   * Goal 35. Weak Mutation 24: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceConstant - 1 -> 0
   * Goal 36. Weak Mutation 25: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> +
   * Goal 37. Weak Mutation 26: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> %
   * Goal 38. Weak Mutation 27: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> *
   * Goal 39. Weak Mutation 28: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> /
   * Goal 40. Weak Mutation 29: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 0
   * Goal 41. Weak Mutation 30: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 1
   * Goal 42. Weak Mutation 31: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> -1
   * Goal 43. Weak Mutation 32: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 45
   * Goal 44. Weak Mutation 33: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 47
   * Goal 45. Weak Mutation 34: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 0
   * Goal 46. Weak Mutation 35: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 1
   * Goal 47. Weak Mutation 36: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> -1
   * Goal 48. Weak Mutation 37: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 100
   * Goal 49. Weak Mutation 38: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 102
   * Goal 50. Weak Mutation 39: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 0
   * Goal 51. Weak Mutation 40: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 1
   * Goal 52. Weak Mutation 41: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> -1
   * Goal 53. Weak Mutation 42: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 68
   * Goal 54. Weak Mutation 43: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 70
   * Goal 55. Weak Mutation 44: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 56. Weak Mutation 45: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 57. Weak Mutation 46: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 58. Weak Mutation 47: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 59. Weak Mutation 48: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 1 -> 0
   * Goal 60. Weak Mutation 49: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 61. Weak Mutation 50: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 62. Weak Mutation 51: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 63. Weak Mutation 52: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 64. Weak Mutation 53: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceVariable decPos -> expPos
   * Goal 65. Weak Mutation 54: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp Negation of decPos
   * Goal 66. Weak Mutation 55: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC 1 decPos
   * Goal 67. Weak Mutation 56: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC -1 decPos
   * Goal 68. Weak Mutation 57: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 0
   * Goal 69. Weak Mutation 58: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 1
   * Goal 70. Weak Mutation 59: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> -2
   * Goal 71. Weak Mutation 60: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceComparisonOperator <= -> -1
   * Goal 72. Weak Mutation 63: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceVariable expPos -> decPos
   * Goal 73. Weak Mutation 64: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - InsertUnaryOp Negation of expPos
   * Goal 74. Weak Mutation 65: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - InsertUnaryOp IINC 1 expPos
   * Goal 75. Weak Mutation 66: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - InsertUnaryOp IINC -1 expPos
   * Goal 76. Weak Mutation 67: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceConstant - -1 -> 0
   * Goal 77. Weak Mutation 68: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceConstant - -1 -> 1
   * Goal 78. Weak Mutation 69: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceConstant - -1 -> -2
   * Goal 79. Weak Mutation 71: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceComparisonOperator <= -> <
   * Goal 80. Weak Mutation 98: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:302 - ReplaceComparisonOperator != null -> = null
   * Goal 81. Weak Mutation 100: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceConstant - 1 -> 0
   * Goal 82. Weak Mutation 101: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> +
   * Goal 83. Weak Mutation 102: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> %
   * Goal 84. Weak Mutation 103: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> *
   * Goal 85. Weak Mutation 104: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceArithmeticOperator - -> /
   * Goal 86. Weak Mutation 105: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp Negation of i
   * Goal 87. Weak Mutation 106: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC 1 i
   * Goal 88. Weak Mutation 107: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - InsertUnaryOp IINC -1 i
   * Goal 89. Weak Mutation 108: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:305 - ReplaceComparisonOperator < -> -2
   * Goal 90. Weak Mutation 125: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:310 - ReplaceComparisonOperator <= -> <
   * Goal 91. Weak Mutation 127: org.apache.commons.lang.NumberUtils.isAllZeros(Ljava/lang/String;)Z:310 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 41
  /*
   * 79 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 2. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 3. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 4. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 145
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 152
   * Goal 6. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 155
   * Goal 7. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 159
   * Goal 8. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 160
   * Goal 9. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 162
   * Goal 10. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 164
   * Goal 11. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 165
   * Goal 12. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 166
   * Goal 13. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 14. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 15. Weak Mutation 6: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> <
   * Goal 16. Weak Mutation 9: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - -- -> 
   * Goal 17. Weak Mutation 10: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - 0 -> 1
   * Goal 18. Weak Mutation 12: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceComparisonOperator <= -> ==
   * Goal 19. Weak Mutation 14: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0x -> 
   * Goal 20. Weak Mutation 15: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 21. Weak Mutation 17: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator > -> !=
   * Goal 22. Weak Mutation 19: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - -0x -> 
   * Goal 23. Weak Mutation 20: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 24. Weak Mutation 22: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator <= -> ==
   * Goal 25. Weak Mutation 24: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceConstant - 1 -> 0
   * Goal 26. Weak Mutation 25: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> +
   * Goal 27. Weak Mutation 26: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> %
   * Goal 28. Weak Mutation 27: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> *
   * Goal 29. Weak Mutation 28: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:155 - ReplaceArithmeticOperator - -> /
   * Goal 30. Weak Mutation 29: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 0
   * Goal 31. Weak Mutation 30: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 1
   * Goal 32. Weak Mutation 31: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> -1
   * Goal 33. Weak Mutation 32: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 45
   * Goal 34. Weak Mutation 33: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:159 - ReplaceConstant - 46 -> 47
   * Goal 35. Weak Mutation 34: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 0
   * Goal 36. Weak Mutation 35: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 1
   * Goal 37. Weak Mutation 36: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> -1
   * Goal 38. Weak Mutation 37: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 100
   * Goal 39. Weak Mutation 38: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 101 -> 102
   * Goal 40. Weak Mutation 39: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 0
   * Goal 41. Weak Mutation 40: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 1
   * Goal 42. Weak Mutation 41: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> -1
   * Goal 43. Weak Mutation 42: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 68
   * Goal 44. Weak Mutation 43: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 69 -> 70
   * Goal 45. Weak Mutation 44: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 46. Weak Mutation 45: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 47. Weak Mutation 46: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 48. Weak Mutation 47: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 49. Weak Mutation 48: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceConstant - 1 -> 0
   * Goal 50. Weak Mutation 49: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> %
   * Goal 51. Weak Mutation 50: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> -
   * Goal 52. Weak Mutation 51: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> *
   * Goal 53. Weak Mutation 52: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:160 - ReplaceArithmeticOperator + -> /
   * Goal 54. Weak Mutation 53: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceVariable decPos -> expPos
   * Goal 55. Weak Mutation 54: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp Negation of decPos
   * Goal 56. Weak Mutation 55: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC 1 decPos
   * Goal 57. Weak Mutation 56: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - InsertUnaryOp IINC -1 decPos
   * Goal 58. Weak Mutation 57: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 0
   * Goal 59. Weak Mutation 58: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> 1
   * Goal 60. Weak Mutation 59: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceConstant - -1 -> -2
   * Goal 61. Weak Mutation 60: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:162 - ReplaceComparisonOperator <= -> -1
   * Goal 62. Weak Mutation 63: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceVariable expPos -> decPos
   * Goal 63. Weak Mutation 64: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - InsertUnaryOp Negation of expPos
   * Goal 64. Weak Mutation 65: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - InsertUnaryOp IINC 1 expPos
   * Goal 65. Weak Mutation 66: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - InsertUnaryOp IINC -1 expPos
   * Goal 66. Weak Mutation 67: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceConstant - -1 -> 0
   * Goal 67. Weak Mutation 68: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceConstant - -1 -> 1
   * Goal 68. Weak Mutation 69: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceConstant - -1 -> -2
   * Goal 69. Weak Mutation 70: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:164 - ReplaceComparisonOperator <= -> -1
   * Goal 70. Weak Mutation 73: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - ReplaceVariable expPos -> decPos
   * Goal 71. Weak Mutation 74: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - InsertUnaryOp Negation of expPos
   * Goal 72. Weak Mutation 75: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - InsertUnaryOp IINC 1 expPos
   * Goal 73. Weak Mutation 76: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - InsertUnaryOp IINC -1 expPos
   * Goal 74. Weak Mutation 77: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - ReplaceVariable decPos -> expPos
   * Goal 75. Weak Mutation 78: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - InsertUnaryOp Negation of decPos
   * Goal 76. Weak Mutation 79: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - InsertUnaryOp IINC 1 decPos
   * Goal 77. Weak Mutation 80: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - InsertUnaryOp IINC -1 decPos
   * Goal 78. Weak Mutation 81: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:165 - ReplaceComparisonOperator >= -> -1
   * Goal 79. Weak Mutation 84: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:166 - ReplaceConstant -  is not a valid number. -> 
   */

  

  //Test case number: 42
  /*
   * 16 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 2. org.apache.commons.lang.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 347
   * Goal 3. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 4. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 145
   * Goal 6. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 152
   * Goal 7. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 153
   * Goal 8. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 9. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 10. Weak Mutation 6: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> <
   * Goal 11. Weak Mutation 9: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - -- -> 
   * Goal 12. Weak Mutation 10: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - 0 -> 1
   * Goal 13. Weak Mutation 12: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceComparisonOperator <= -> ==
   * Goal 14. Weak Mutation 14: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0x -> 
   * Goal 15. Weak Mutation 15: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceConstant - 0 -> 1
   * Goal 16. Weak Mutation 16: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:152 - ReplaceComparisonOperator > -> -2
   */

  

  //Test case number: 43
  /*
   * 11 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 2. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 3. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 145
   * Goal 4. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 150
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 6. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 7. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 8. Weak Mutation 6: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> <
   * Goal 9. Weak Mutation 9: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - -- -> 
   * Goal 10. Weak Mutation 10: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceConstant - 0 -> 1
   * Goal 11. Weak Mutation 11: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:145 - ReplaceComparisonOperator <= -> -1
   */

  

  //Test case number: 44
  /*
   * 8 covered goals:
   * Goal 1. createNumber(Ljava/lang/String;)Ljava/lang/Number;_java.lang.NumberFormatException_DECLARED
   * Goal 2. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 3. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 142
   * Goal 4. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 143
   * Goal 5. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 6. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   * Goal 7. Weak Mutation 5: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:142 - ReplaceComparisonOperator != -> -1
   * Goal 8. Weak Mutation 8: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:143 - ReplaceConstant - "" is not a valid number. -> 
   */

  

  //Test case number: 45
  /*
   * 5 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 139
   * Goal 2. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;: Line 140
   * Goal 3. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 4. org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;
   * Goal 5. Weak Mutation 4: org.apache.commons.lang.NumberUtils.createNumber(Ljava/lang/String;)Ljava/lang/Number;:139 - ReplaceComparisonOperator != null -> = null
   */

  

  //Test case number: 46
  /*
   * 4 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 369
   * Goal 2. org.apache.commons.lang.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 370
   * Goal 3. org.apache.commons.lang.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   * Goal 4. org.apache.commons.lang.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   */

  

  //Test case number: 47
  /*
   * 4 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 381
   * Goal 2. org.apache.commons.lang.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 382
   * Goal 3. org.apache.commons.lang.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   * Goal 4. org.apache.commons.lang.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   */

  

  //Test case number: 48
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.compare(FF)I: Line 557
   * Goal 2. org.apache.commons.lang.NumberUtils.compare(FF)I: Line 560
   * Goal 3. org.apache.commons.lang.NumberUtils.compare(FF)I: Line 561
   * Goal 4. org.apache.commons.lang.NumberUtils.compare(FF)I
   * Goal 5. org.apache.commons.lang.NumberUtils.compare(FF)I
   * Goal 6. Weak Mutation 305: org.apache.commons.lang.NumberUtils.compare(FF)I:557 - ReplaceVariable lhs -> rhs
   * Goal 7. Weak Mutation 306: org.apache.commons.lang.NumberUtils.compare(FF)I:557 - InsertUnaryOp Negation of lhs
   * Goal 8. Weak Mutation 307: org.apache.commons.lang.NumberUtils.compare(FF)I:557 - ReplaceVariable rhs -> lhs
   * Goal 9. Weak Mutation 308: org.apache.commons.lang.NumberUtils.compare(FF)I:557 - InsertUnaryOp Negation of rhs
   * Goal 10. Weak Mutation 310: org.apache.commons.lang.NumberUtils.compare(FF)I:557 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 315: org.apache.commons.lang.NumberUtils.compare(FF)I:560 - ReplaceVariable lhs -> rhs
   * Goal 12. Weak Mutation 316: org.apache.commons.lang.NumberUtils.compare(FF)I:560 - InsertUnaryOp Negation of lhs
   * Goal 13. Weak Mutation 317: org.apache.commons.lang.NumberUtils.compare(FF)I:560 - ReplaceVariable rhs -> lhs
   * Goal 14. Weak Mutation 318: org.apache.commons.lang.NumberUtils.compare(FF)I:560 - InsertUnaryOp Negation of rhs
   * Goal 15. Weak Mutation 319: org.apache.commons.lang.NumberUtils.compare(FF)I:560 - ReplaceComparisonOperator <= -> -1
   * Goal 16. Weak Mutation 322: org.apache.commons.lang.NumberUtils.compare(FF)I:561 - ReplaceConstant - 1 -> 0
   */

  

  //Test case number: 49
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.compare(FF)I: Line 557
   * Goal 2. org.apache.commons.lang.NumberUtils.compare(FF)I: Line 558
   * Goal 3. org.apache.commons.lang.NumberUtils.compare(FF)I
   * Goal 4. org.apache.commons.lang.NumberUtils.compare(FF)I
   * Goal 5. Weak Mutation 305: org.apache.commons.lang.NumberUtils.compare(FF)I:557 - ReplaceVariable lhs -> rhs
   * Goal 6. Weak Mutation 306: org.apache.commons.lang.NumberUtils.compare(FF)I:557 - InsertUnaryOp Negation of lhs
   * Goal 7. Weak Mutation 307: org.apache.commons.lang.NumberUtils.compare(FF)I:557 - ReplaceVariable rhs -> lhs
   * Goal 8. Weak Mutation 308: org.apache.commons.lang.NumberUtils.compare(FF)I:557 - InsertUnaryOp Negation of rhs
   * Goal 9. Weak Mutation 309: org.apache.commons.lang.NumberUtils.compare(FF)I:557 - ReplaceComparisonOperator >= -> -1
   * Goal 10. Weak Mutation 312: org.apache.commons.lang.NumberUtils.compare(FF)I:558 - ReplaceConstant - -1 -> 0
   * Goal 11. Weak Mutation 313: org.apache.commons.lang.NumberUtils.compare(FF)I:558 - ReplaceConstant - -1 -> 1
   * Goal 12. Weak Mutation 314: org.apache.commons.lang.NumberUtils.compare(FF)I:558 - ReplaceConstant - -1 -> -2
   */

  

  //Test case number: 50
  /*
   * 24 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.compare(FF)I: Line 557
   * Goal 2. org.apache.commons.lang.NumberUtils.compare(FF)I: Line 560
   * Goal 3. org.apache.commons.lang.NumberUtils.compare(FF)I: Line 567
   * Goal 4. org.apache.commons.lang.NumberUtils.compare(FF)I: Line 568
   * Goal 5. org.apache.commons.lang.NumberUtils.compare(FF)I: Line 569
   * Goal 6. org.apache.commons.lang.NumberUtils.compare(FF)I: Line 570
   * Goal 7. org.apache.commons.lang.NumberUtils.compare(FF)I
   * Goal 8. org.apache.commons.lang.NumberUtils.compare(FF)I
   * Goal 9. Weak Mutation 306: org.apache.commons.lang.NumberUtils.compare(FF)I:557 - InsertUnaryOp Negation of lhs
   * Goal 10. Weak Mutation 308: org.apache.commons.lang.NumberUtils.compare(FF)I:557 - InsertUnaryOp Negation of rhs
   * Goal 11. Weak Mutation 311: org.apache.commons.lang.NumberUtils.compare(FF)I:557 - ReplaceComparisonOperator >= -> >
   * Goal 12. Weak Mutation 316: org.apache.commons.lang.NumberUtils.compare(FF)I:560 - InsertUnaryOp Negation of lhs
   * Goal 13. Weak Mutation 318: org.apache.commons.lang.NumberUtils.compare(FF)I:560 - InsertUnaryOp Negation of rhs
   * Goal 14. Weak Mutation 321: org.apache.commons.lang.NumberUtils.compare(FF)I:560 - ReplaceComparisonOperator <= -> <
   * Goal 15. Weak Mutation 324: org.apache.commons.lang.NumberUtils.compare(FF)I:567 - InsertUnaryOp Negation of lhs
   * Goal 16. Weak Mutation 326: org.apache.commons.lang.NumberUtils.compare(FF)I:568 - InsertUnaryOp Negation of rhs
   * Goal 17. Weak Mutation 328: org.apache.commons.lang.NumberUtils.compare(FF)I:569 - InsertUnaryOp Negation of lhsBits
   * Goal 18. Weak Mutation 329: org.apache.commons.lang.NumberUtils.compare(FF)I:569 - InsertUnaryOp IINC 1 lhsBits
   * Goal 19. Weak Mutation 330: org.apache.commons.lang.NumberUtils.compare(FF)I:569 - InsertUnaryOp IINC -1 lhsBits
   * Goal 20. Weak Mutation 332: org.apache.commons.lang.NumberUtils.compare(FF)I:569 - InsertUnaryOp Negation of rhsBits
   * Goal 21. Weak Mutation 333: org.apache.commons.lang.NumberUtils.compare(FF)I:569 - InsertUnaryOp IINC 1 rhsBits
   * Goal 22. Weak Mutation 334: org.apache.commons.lang.NumberUtils.compare(FF)I:569 - InsertUnaryOp IINC -1 rhsBits
   * Goal 23. Weak Mutation 335: org.apache.commons.lang.NumberUtils.compare(FF)I:569 - ReplaceComparisonOperator != -> -1
   * Goal 24. Weak Mutation 338: org.apache.commons.lang.NumberUtils.compare(FF)I:570 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 51
  /*
   * 20 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.compare(DD)I: Line 496
   * Goal 2. org.apache.commons.lang.NumberUtils.compare(DD)I: Line 499
   * Goal 3. org.apache.commons.lang.NumberUtils.compare(DD)I: Line 506
   * Goal 4. org.apache.commons.lang.NumberUtils.compare(DD)I: Line 507
   * Goal 5. org.apache.commons.lang.NumberUtils.compare(DD)I: Line 508
   * Goal 6. org.apache.commons.lang.NumberUtils.compare(DD)I: Line 509
   * Goal 7. org.apache.commons.lang.NumberUtils.compare(DD)I
   * Goal 8. org.apache.commons.lang.NumberUtils.compare(DD)I
   * Goal 9. Weak Mutation 265: org.apache.commons.lang.NumberUtils.compare(DD)I:496 - InsertUnaryOp Negation of lhs
   * Goal 10. Weak Mutation 267: org.apache.commons.lang.NumberUtils.compare(DD)I:496 - InsertUnaryOp Negation of rhs
   * Goal 11. Weak Mutation 270: org.apache.commons.lang.NumberUtils.compare(DD)I:496 - ReplaceComparisonOperator >= -> >
   * Goal 12. Weak Mutation 275: org.apache.commons.lang.NumberUtils.compare(DD)I:499 - InsertUnaryOp Negation of lhs
   * Goal 13. Weak Mutation 277: org.apache.commons.lang.NumberUtils.compare(DD)I:499 - InsertUnaryOp Negation of rhs
   * Goal 14. Weak Mutation 280: org.apache.commons.lang.NumberUtils.compare(DD)I:499 - ReplaceComparisonOperator <= -> <
   * Goal 15. Weak Mutation 283: org.apache.commons.lang.NumberUtils.compare(DD)I:506 - InsertUnaryOp Negation of lhs
   * Goal 16. Weak Mutation 285: org.apache.commons.lang.NumberUtils.compare(DD)I:507 - InsertUnaryOp Negation of rhs
   * Goal 17. Weak Mutation 287: org.apache.commons.lang.NumberUtils.compare(DD)I:508 - InsertUnaryOp Negation of lhsBits
   * Goal 18. Weak Mutation 289: org.apache.commons.lang.NumberUtils.compare(DD)I:508 - InsertUnaryOp Negation of rhsBits
   * Goal 19. Weak Mutation 290: org.apache.commons.lang.NumberUtils.compare(DD)I:508 - ReplaceComparisonOperator != -> -1
   * Goal 20. Weak Mutation 293: org.apache.commons.lang.NumberUtils.compare(DD)I:509 - ReplaceConstant - 0 -> 1
   */

  

  //Test case number: 52
  /*
   * 12 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.compare(DD)I: Line 496
   * Goal 2. org.apache.commons.lang.NumberUtils.compare(DD)I: Line 497
   * Goal 3. org.apache.commons.lang.NumberUtils.compare(DD)I
   * Goal 4. org.apache.commons.lang.NumberUtils.compare(DD)I
   * Goal 5. Weak Mutation 264: org.apache.commons.lang.NumberUtils.compare(DD)I:496 - ReplaceVariable lhs -> rhs
   * Goal 6. Weak Mutation 265: org.apache.commons.lang.NumberUtils.compare(DD)I:496 - InsertUnaryOp Negation of lhs
   * Goal 7. Weak Mutation 266: org.apache.commons.lang.NumberUtils.compare(DD)I:496 - ReplaceVariable rhs -> lhs
   * Goal 8. Weak Mutation 267: org.apache.commons.lang.NumberUtils.compare(DD)I:496 - InsertUnaryOp Negation of rhs
   * Goal 9. Weak Mutation 268: org.apache.commons.lang.NumberUtils.compare(DD)I:496 - ReplaceComparisonOperator >= -> -1
   * Goal 10. Weak Mutation 271: org.apache.commons.lang.NumberUtils.compare(DD)I:497 - ReplaceConstant - -1 -> 0
   * Goal 11. Weak Mutation 272: org.apache.commons.lang.NumberUtils.compare(DD)I:497 - ReplaceConstant - -1 -> 1
   * Goal 12. Weak Mutation 273: org.apache.commons.lang.NumberUtils.compare(DD)I:497 - ReplaceConstant - -1 -> -2
   */

  

  //Test case number: 53
  /*
   * 16 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.compare(DD)I: Line 496
   * Goal 2. org.apache.commons.lang.NumberUtils.compare(DD)I: Line 499
   * Goal 3. org.apache.commons.lang.NumberUtils.compare(DD)I: Line 500
   * Goal 4. org.apache.commons.lang.NumberUtils.compare(DD)I
   * Goal 5. org.apache.commons.lang.NumberUtils.compare(DD)I
   * Goal 6. Weak Mutation 264: org.apache.commons.lang.NumberUtils.compare(DD)I:496 - ReplaceVariable lhs -> rhs
   * Goal 7. Weak Mutation 265: org.apache.commons.lang.NumberUtils.compare(DD)I:496 - InsertUnaryOp Negation of lhs
   * Goal 8. Weak Mutation 266: org.apache.commons.lang.NumberUtils.compare(DD)I:496 - ReplaceVariable rhs -> lhs
   * Goal 9. Weak Mutation 267: org.apache.commons.lang.NumberUtils.compare(DD)I:496 - InsertUnaryOp Negation of rhs
   * Goal 10. Weak Mutation 269: org.apache.commons.lang.NumberUtils.compare(DD)I:496 - ReplaceComparisonOperator >= -> ==
   * Goal 11. Weak Mutation 274: org.apache.commons.lang.NumberUtils.compare(DD)I:499 - ReplaceVariable lhs -> rhs
   * Goal 12. Weak Mutation 275: org.apache.commons.lang.NumberUtils.compare(DD)I:499 - InsertUnaryOp Negation of lhs
   * Goal 13. Weak Mutation 276: org.apache.commons.lang.NumberUtils.compare(DD)I:499 - ReplaceVariable rhs -> lhs
   * Goal 14. Weak Mutation 277: org.apache.commons.lang.NumberUtils.compare(DD)I:499 - InsertUnaryOp Negation of rhs
   * Goal 15. Weak Mutation 278: org.apache.commons.lang.NumberUtils.compare(DD)I:499 - ReplaceComparisonOperator <= -> -1
   * Goal 16. Weak Mutation 281: org.apache.commons.lang.NumberUtils.compare(DD)I:500 - ReplaceConstant - 1 -> 0
   */

  

  //Test case number: 54
  /*
   * 3 covered goals:
   * Goal 1. org.apache.commons.lang.NumberUtils.<init>()V: Line 48
   * Goal 2. org.apache.commons.lang.NumberUtils.<init>()V
   * Goal 3. org.apache.commons.lang.NumberUtils.<init>()V
   */

  

  //Test case number: 55
  /*
   * 3 covered goals:
   * Goal 1. createLong(Ljava/lang/String;)Ljava/lang/Long;_java.lang.NumberFormatException_IMPLICIT
   * Goal 2. org.apache.commons.lang.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;: Line 358
   * Goal 3. org.apache.commons.lang.NumberUtils.createLong(Ljava/lang/String;)Ljava/lang/Long;
   */

  

  //Test case number: 56
  /*
   * 3 covered goals:
   * Goal 1. createInteger(Ljava/lang/String;)Ljava/lang/Integer;_java.lang.NumberFormatException_IMPLICIT
   * Goal 2. org.apache.commons.lang.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 347
   * Goal 3. org.apache.commons.lang.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;
   */

  

  //Test case number: 57
  /*
   * 3 covered goals:
   * Goal 1. createInteger(Ljava/lang/String;)Ljava/lang/Integer;_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.lang.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;: Line 347
   * Goal 3. org.apache.commons.lang.NumberUtils.createInteger(Ljava/lang/String;)Ljava/lang/Integer;
   */

  

  //Test case number: 58
  /*
   * 3 covered goals:
   * Goal 1. createFloat(Ljava/lang/String;)Ljava/lang/Float;_java.lang.NumberFormatException_IMPLICIT
   * Goal 2. org.apache.commons.lang.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 323
   * Goal 3. org.apache.commons.lang.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;
   */

  

  //Test case number: 59
  /*
   * 3 covered goals:
   * Goal 1. createFloat(Ljava/lang/String;)Ljava/lang/Float;_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.lang.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;: Line 323
   * Goal 3. org.apache.commons.lang.NumberUtils.createFloat(Ljava/lang/String;)Ljava/lang/Float;
   */

  

  //Test case number: 60
  /*
   * 3 covered goals:
   * Goal 1. createDouble(Ljava/lang/String;)Ljava/lang/Double;_java.lang.NumberFormatException_IMPLICIT
   * Goal 2. org.apache.commons.lang.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 334
   * Goal 3. org.apache.commons.lang.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;
   */

  

  //Test case number: 61
  /*
   * 3 covered goals:
   * Goal 1. createDouble(Ljava/lang/String;)Ljava/lang/Double;_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.lang.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;: Line 334
   * Goal 3. org.apache.commons.lang.NumberUtils.createDouble(Ljava/lang/String;)Ljava/lang/Double;
   */

  

  //Test case number: 62
  /*
   * 3 covered goals:
   * Goal 1. createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;_java.lang.NumberFormatException_IMPLICIT
   * Goal 2. org.apache.commons.lang.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 369
   * Goal 3. org.apache.commons.lang.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   */

  

  //Test case number: 63
  /*
   * 3 covered goals:
   * Goal 1. createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.lang.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;: Line 369
   * Goal 3. org.apache.commons.lang.NumberUtils.createBigInteger(Ljava/lang/String;)Ljava/math/BigInteger;
   */

  

  //Test case number: 64
  /*
   * 3 covered goals:
   * Goal 1. createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;_java.lang.NumberFormatException_IMPLICIT
   * Goal 2. org.apache.commons.lang.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 381
   * Goal 3. org.apache.commons.lang.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   */

  

  //Test case number: 65
  /*
   * 3 covered goals:
   * Goal 1. createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;_java.lang.NullPointerException_IMPLICIT
   * Goal 2. org.apache.commons.lang.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;: Line 381
   * Goal 3. org.apache.commons.lang.NumberUtils.createBigDecimal(Ljava/lang/String;)Ljava/math/BigDecimal;
   */
}
