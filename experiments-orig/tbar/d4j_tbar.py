CHART_SIZE=26
CLOSURE_SIZE=133
LANG_SIZE=65
MATH_SIZE=106
MOCKITO_SIZE=38
TIME_SIZE=27

CHART_CORRECT=(1,4,8,9,11,14,14002,14003,14004,19,19002,20,24)
CLOSURE_CORRECT=(2,21,38,46,62,63,73,86)
LANG_CORRECT=(10,33,47,47002,57,59)
MATH_CORRECT=(4,4002,5,11,22,22002,30,34,35,35002,57,58,65,70,75,77,77002,79,80,89)
MOCKITO_CORRECT=(38,)
TIME_CORRECT=(7,)

CLOSURE_SKIP=(9,28,49,72,115,116)
MOCKITO_SKIP=(9,10,11,21,25)

CHART_CORRECT_PFL=(12,26)
CLOSURE_CORRECT_PFL=(2,4,10,11,13,38,40,70,102,117) # 115: stack overflow at patch generation
LANG_CORRECT_PFL=(6,24,26,39)
MATH_CORRECT_PFL=(58,82,85)
TIME_CORRECT_PFL=(7,19,26)

CHART_PLAUSIBLE=(12,13,15,25,26,3,7)
CLOSURE_PLAUSIBLE=(107,109,126,12,133,22,66)
LANG_PLAUSIBLE=(13,18,20,22,24,27,39,41,43,44,45,51,58,60,63)
MATH_PLAUSIBLE=(15,2,50,62,63,6,81,82,84,85,88,8,95,96)

CLI_SIZE=40
CODEC_SIZE=18
COLLECTIONS_SIZE=28
COMPRESS_SIZE=47
CSV_SIZE=16
GSON_SIZE=18
JACKSON_CORE_SIZE=26
JACKSON_DATABIND_SIZE=112
JACKSON_XML_SIZE=6
JSOUP_SIZE=93
JXPATH_SIZE=22
CLOSURE_NEW=[i for i in range(133,175)]

CLI_SKIP=(6,)
COLLECTIONS_SKIP=(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24)
JACKSON_DATABIND_SKIP=[]
for i in range(58,113):
    JACKSON_DATABIND_SKIP.append(i)